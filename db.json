{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/draft/media/9ead5d9351ef1743de4b5f953bc6309cb891716625a83-MkkG4G_fw658.jpeg","path":"draft/media/9ead5d9351ef1743de4b5f953bc6309cb891716625a83-MkkG4G_fw658.jpeg","modified":0,"renderable":0},{"_id":"themes/maupassant/source/css/default.css","path":"css/default.css","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/donate.css","path":"css/donate.css","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/AliPayQR.png","path":"img/AliPayQR.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/BTCQR.png","path":"img/BTCQR.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/WeChatQR.png","path":"img/WeChatQR.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/alipay.svg","path":"img/alipay.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/bitcoin.svg","path":"img/bitcoin.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/github.svg","path":"img/github.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/like.svg","path":"img/like.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/wechat.svg","path":"img/wechat.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/img/paypal.svg","path":"img/paypal.svg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/donate.js","path":"js/donate.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/donate/index.html","path":"donate/index.html","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/gitment.browser.js","path":"js/gitment.browser.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/.Ulysses-favorites.plist","hash":"f0fb22359f8e7dc91935e9aa74588477a838f002","modified":1508405629000},{"_id":"themes/maupassant/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1505037865000},{"_id":"source/前端常见布局方式整理.md","hash":"0b98f5660fe6ae084c759b702e04d4aa70676ef0","modified":1508923173000},{"_id":"source/.DS_Store","hash":"934e2a2c7a2fcb6d59992c7080a4b18da41def40","modified":1511440129000},{"_id":"themes/maupassant/LICENSE","hash":"f0ac2f92770650c9835183f79010c0d307b34acd","modified":1505037865000},{"_id":"themes/maupassant/_config.yml","hash":"05adbf0b84253f2c9d5585a2accc6a4e6495e9e0","modified":1505042888000},{"_id":"themes/maupassant/README.md","hash":"b3fd2d71642ee922678038e6813e6c39638fb33c","modified":1505037865000},{"_id":"themes/maupassant/package.json","hash":"81fb4e2ac051ecfb9a93f37b28910291b939771a","modified":1505037865000},{"_id":"source/categories/index.md","hash":"f46c01db229101e8d80b838f930a915eec0fd7e1","modified":1502117071000},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1503661847000},{"_id":"source/_posts/JWPlayer播放器中文使用文档.md","hash":"c4595f5611c82c5480ca559960434242181a4751","modified":1508856894000},{"_id":"source/_posts/《图解HTTP》学习笔记(1) - 基础知识.md","hash":"9d5897bcace9c4fac640e83ebda305b20d9ef30e","modified":1511411232000},{"_id":"source/draft/2017-10-26.md","hash":"3b0a49b5da5e1378638e643dfdc4b1bdc0d0cd6d","modified":1509090261000},{"_id":"source/draft/提高React组件复用性，理解受控组件和非受控组件.md","hash":"1e1d2b42cfec8e4cbff5501bdef6fdc973dedff6","modified":1508406950000},{"_id":"themes/maupassant/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1505037865000},{"_id":"themes/maupassant/.git/config","hash":"037345b11c41abb3dbbbd6e0242ced24979a7097","modified":1505037865000},{"_id":"themes/maupassant/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1505037833000},{"_id":"themes/maupassant/.git/index","hash":"f4f58bc6cfbb57e99a8a394ab38e8af39ded9f9f","modified":1505038034000},{"_id":"themes/maupassant/.git/packed-refs","hash":"05703b7727eb30e34cb2d7a44d6822bd6d361bbc","modified":1505037865000},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1505037865000},{"_id":"themes/maupassant/languages/en.yml","hash":"9dc51349f64e882433957c00dc757366229e0269","modified":1505037865000},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1505037865000},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1505037865000},{"_id":"themes/maupassant/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1505037865000},{"_id":"themes/maupassant/languages/ru.yml","hash":"2476a631f4d3c668de04af85a6c2c97ba2a57e96","modified":1505037865000},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"ffce5df2448a80dbad71da115c84b81f42a42778","modified":1505037865000},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"bf3ab970f2ab3f29ddeb9f59bf98163be635e284","modified":1505037865000},{"_id":"themes/maupassant/layout/archive.jade","hash":"0050c883b4f202add71c8664d65e6072179e7190","modified":1505037865000},{"_id":"themes/maupassant/layout/base-without-sidebar.jade","hash":"60b5a70f7c61c91aca9fbf813bde26096ef4028f","modified":1505037865000},{"_id":"themes/maupassant/layout/base.jade","hash":"41f3a0f5e3c5b722de9d058c458822e5122384e1","modified":1505037865000},{"_id":"themes/maupassant/layout/page.jade","hash":"afc27b4a6478a804ded47aa9f38290c7a9b75abe","modified":1505037865000},{"_id":"themes/maupassant/layout/index.jade","hash":"9e397e36ee7f1c3be89eeaedec05532b4505551a","modified":1505037865000},{"_id":"themes/maupassant/layout/post.jade","hash":"da3fedff6885ee810fe10403e65bd0194be2171e","modified":1505037865000},{"_id":"themes/maupassant/layout/single-column.jade","hash":"c35fff4d9b331a41af5bc10f4278ec3d9da503db","modified":1505037865000},{"_id":"themes/maupassant/layout/timeline.jade","hash":"649281ace58d7ff08a6ecb10606799ae2f77bb38","modified":1505037865000},{"_id":"source/draft/media/9ead5d9351ef1743de4b5f953bc6309cb891716625a83-MkkG4G_fw658.jpeg","hash":"13edfda194a9b0f5c8769b96d527b9d3d873b61c","modified":1477224520000},{"_id":"themes/maupassant/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1505037833000},{"_id":"themes/maupassant/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1505037833000},{"_id":"themes/maupassant/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1505037833000},{"_id":"themes/maupassant/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1505037833000},{"_id":"themes/maupassant/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1505037833000},{"_id":"themes/maupassant/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1505037833000},{"_id":"themes/maupassant/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1505037833000},{"_id":"themes/maupassant/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1505037833000},{"_id":"themes/maupassant/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1505037833000},{"_id":"themes/maupassant/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1505037833000},{"_id":"themes/maupassant/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1505037833000},{"_id":"themes/maupassant/.git/logs/HEAD","hash":"d5fe89e13112f16ba9386bf8c493f3ee1c60f9f1","modified":1505037865000},{"_id":"themes/maupassant/layout/_partial/after_footer.jade","hash":"4e42048a688aa10301e5691331dffa019a082846","modified":1505037865000},{"_id":"themes/maupassant/layout/_partial/comments.jade","hash":"06e0ee41eb6cb3aab2931a9f854a80e943544e1b","modified":1505037865000},{"_id":"themes/maupassant/layout/_partial/head.jade","hash":"25d271612a40a9105bf47804cc979728ae57e1a9","modified":1505037865000},{"_id":"themes/maupassant/layout/_partial/footer.jade","hash":"650781b5bc8c632658ad6880ba663b1e3bfb5798","modified":1505037865000},{"_id":"themes/maupassant/layout/_partial/mathjax.jade","hash":"b54b56faff9e47ab3ca3cdd55056c73e60776f3c","modified":1505037865000},{"_id":"themes/maupassant/layout/_partial/helpers.jade","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1505037865000},{"_id":"themes/maupassant/layout/_partial/mathjax2.jade","hash":"d6ac5dc4e9c7a1b866f1f92d88988cfb35aded4c","modified":1505037865000},{"_id":"themes/maupassant/layout/_partial/paginator.jade","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1505037865000},{"_id":"themes/maupassant/layout/_partial/post_nav.jade","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1505037865000},{"_id":"themes/maupassant/layout/_partial/tag.jade","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1505037865000},{"_id":"themes/maupassant/layout/_partial/totop.jade","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1505037865000},{"_id":"themes/maupassant/layout/_widget/category.jade","hash":"7c6aed762934ca51aa2669b886254da24b77bc14","modified":1505037865000},{"_id":"themes/maupassant/layout/_widget/search.jade","hash":"193546282908e499813534f86d27ef6e0a1357b3","modified":1505037865000},{"_id":"themes/maupassant/layout/_widget/recent_posts.jade","hash":"19431336d724d2118e46da43683bce9063176541","modified":1505037865000},{"_id":"themes/maupassant/layout/_widget/recent_comments.jade","hash":"e119c5afa85abc60d139e2da99b0bfcd7a6530f8","modified":1505037865000},{"_id":"themes/maupassant/layout/_widget/links.jade","hash":"f57a0c76d243882b2b77330132bdb43bc648948b","modified":1505037865000},{"_id":"themes/maupassant/layout/_widget/tag.jade","hash":"132f049ce677d0e38f50073174c4ee4b825d4a06","modified":1505037865000},{"_id":"themes/maupassant/source/css/default.css","hash":"7fbb18b73b44ed11193739c55fce53a6f173cf68","modified":1505037865000},{"_id":"themes/maupassant/source/css/donate.css","hash":"d0079ba8202d925a93ab1cb44f2087b81f476755","modified":1505037865000},{"_id":"themes/maupassant/source/css/style.scss","hash":"70356a8a505d2ea1a4047e8976a35155ba1adc82","modified":1505042509000},{"_id":"themes/maupassant/source/img/AliPayQR.png","hash":"7787b5d91cbf0e19a1260df24f7d949771c7d45b","modified":1505037865000},{"_id":"themes/maupassant/source/img/BTCQR.png","hash":"7d1c80f953bfb6f0a37d432b04c936ea165bfd97","modified":1505037865000},{"_id":"themes/maupassant/source/img/WeChatQR.png","hash":"8c41aca7883e5ff714c56556f5fff8e7e7c38093","modified":1505037865000},{"_id":"themes/maupassant/source/img/alipay.svg","hash":"46cc0552a9f6d700d618db3fcad25e1b8e697e36","modified":1505037865000},{"_id":"themes/maupassant/source/img/bitcoin.svg","hash":"635f7cca5e675d192be2717788175c7a2146013a","modified":1505037865000},{"_id":"themes/maupassant/source/img/github.svg","hash":"90ba9a3b0dc19e70e742a39b014194f801e00f97","modified":1505037865000},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1505037865000},{"_id":"themes/maupassant/source/img/like.svg","hash":"22a2754dc454d7b0321b70914fb2936b8d2ea8ab","modified":1505037865000},{"_id":"themes/maupassant/source/img/wechat.svg","hash":"330496ad42446a29f37a2b97fc388ebd77a8cb9f","modified":1505037865000},{"_id":"themes/maupassant/source/img/paypal.svg","hash":"92f3bc495f20a0190d3041be03345c46d6238c25","modified":1505037865000},{"_id":"themes/maupassant/source/js/donate.js","hash":"780beaaf44b1e6c057752bdbc085b1048937e5e7","modified":1505037865000},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1505037865000},{"_id":"themes/maupassant/source/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1505037865000},{"_id":"themes/maupassant/source/js/share.js","hash":"a2f9de374523dc7f2ddb90ed5f24b668c20d9272","modified":1505037865000},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1505037865000},{"_id":"themes/maupassant/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1505037865000},{"_id":"themes/maupassant/source/donate/index.html","hash":"58260d8d8b5cfa3f46705914e6df164d9f08d9dd","modified":1505037865000},{"_id":"themes/maupassant/.git/objects/pack/pack-011abbd91c456632915f3680d23aae338cca106e.idx","hash":"ef1e145e5fb3e2e6d8aa2b348ed8c65be85bafdd","modified":1505037865000},{"_id":"themes/maupassant/.git/refs/heads/master","hash":"dbcbb508c5dbfc584e4dbf1b53fe250b9d449ee6","modified":1505037865000},{"_id":"themes/maupassant/source/js/gitment.browser.js","hash":"376446d9c5930576016f97dd63e5e6616c94d8d4","modified":1505037865000},{"_id":"themes/maupassant/.git/logs/refs/heads/master","hash":"d5fe89e13112f16ba9386bf8c493f3ee1c60f9f1","modified":1505037865000},{"_id":"themes/maupassant/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1505037865000},{"_id":"themes/maupassant/.git/logs/refs/remotes/origin/HEAD","hash":"d5fe89e13112f16ba9386bf8c493f3ee1c60f9f1","modified":1505037865000},{"_id":"themes/maupassant/.git/objects/pack/pack-011abbd91c456632915f3680d23aae338cca106e.pack","hash":"5ae778ce5a76c7b87ea82dabdd563cc8c4105b31","modified":1505038034000},{"_id":"public/categories/index.html","hash":"0dd31b14d19a8392d6df8e577bb221f78f42e605","modified":1511410756736},{"_id":"public/draft/提高React组件复用性，理解受控组件和非受控组件.html","hash":"084b7d969d39714070e83f7b455b1be9a1121fec","modified":1511410756741},{"_id":"public/archives/index.html","hash":"8f2671f3502fa24512abe7c52610965cf3573f79","modified":1511445488906},{"_id":"public/archives/2017/index.html","hash":"8f2671f3502fa24512abe7c52610965cf3573f79","modified":1511445488906},{"_id":"public/archives/2017/08/index.html","hash":"f082a60380b7b9e5647bed552c929eef71b386c3","modified":1511410756742},{"_id":"public/categories/JavaScript/index.html","hash":"c258ca079090a3719e487031ea2d0dfca39bb9cd","modified":1511410756742},{"_id":"public/index.html","hash":"51466edd0de7dfcca5c4f1ea7866de8412b09d20","modified":1511445488907},{"_id":"public/tags/JS插件-视频播放器/index.html","hash":"a3ba5453f4ecb1bfebb2a3718e530c8977e75d0d","modified":1511410756742},{"_id":"public/前端常见布局方式整理.html","hash":"6899289503412cfb01240e03dd7a84686987b445","modified":1511410756756},{"_id":"public/draft/2017-10-26.html","hash":"26a82e7c6fcf5a45a4d70e732457bbc00691c3aa","modified":1511410756756},{"_id":"public/2017/11/23/《图解HTTP》学习笔记-1-基础知识/index.html","hash":"c8326de45f8b6a888549d472b938f20b599c685a","modified":1511445488906},{"_id":"public/archives/2017/11/index.html","hash":"6cdc36ff81e4736a1cf47c0d5ab3e8d8831662e5","modified":1511445488907},{"_id":"public/categories/技术笔记/index.html","hash":"19e0f77b5e76e559af18fbab604592f38f6e172f","modified":1511410756757},{"_id":"public/2017/08/07/JWPlayer播放器中文使用文档/index.html","hash":"9852c39791c23aa9c1348066b38c582da61baec8","modified":1511410756757},{"_id":"public/tags/HTTP-TCP-IP/index.html","hash":"4b2178e17c3d996dc907e20303523e3031888fb6","modified":1511410756761},{"_id":"public/img/AliPayQR.png","hash":"7787b5d91cbf0e19a1260df24f7d949771c7d45b","modified":1511410756761},{"_id":"public/img/BTCQR.png","hash":"7d1c80f953bfb6f0a37d432b04c936ea165bfd97","modified":1511410756761},{"_id":"public/img/WeChatQR.png","hash":"8c41aca7883e5ff714c56556f5fff8e7e7c38093","modified":1511410756762},{"_id":"public/img/alipay.svg","hash":"46cc0552a9f6d700d618db3fcad25e1b8e697e36","modified":1511410756762},{"_id":"public/img/bitcoin.svg","hash":"635f7cca5e675d192be2717788175c7a2146013a","modified":1511410756762},{"_id":"public/img/github.svg","hash":"90ba9a3b0dc19e70e742a39b014194f801e00f97","modified":1511410756762},{"_id":"public/img/wechat.svg","hash":"330496ad42446a29f37a2b97fc388ebd77a8cb9f","modified":1511410756762},{"_id":"public/img/paypal.svg","hash":"92f3bc495f20a0190d3041be03345c46d6238c25","modified":1511410756763},{"_id":"public/img/like.svg","hash":"22a2754dc454d7b0321b70914fb2936b8d2ea8ab","modified":1511410756763},{"_id":"public/draft/media/9ead5d9351ef1743de4b5f953bc6309cb891716625a83-MkkG4G_fw658.jpeg","hash":"13edfda194a9b0f5c8769b96d527b9d3d873b61c","modified":1511410756763},{"_id":"public/css/donate.css","hash":"d0079ba8202d925a93ab1cb44f2087b81f476755","modified":1511410756798},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1511410756798},{"_id":"public/js/donate.js","hash":"89f0b9d9d0c4fce183161d29c2a44aef750efb27","modified":1511410756798},{"_id":"public/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1511410756798},{"_id":"public/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1511410756798},{"_id":"public/js/share.js","hash":"a2f9de374523dc7f2ddb90ed5f24b668c20d9272","modified":1511410756798},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1511410756798},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1511410756798},{"_id":"public/donate/index.html","hash":"58260d8d8b5cfa3f46705914e6df164d9f08d9dd","modified":1511410756798},{"_id":"public/css/style.css","hash":"781faf418d5baaf0834ada5af23670653c3c3bab","modified":1511410756798},{"_id":"public/css/default.css","hash":"7fbb18b73b44ed11193739c55fce53a6f173cf68","modified":1511410756798},{"_id":"public/js/gitment.browser.js","hash":"376446d9c5930576016f97dd63e5e6616c94d8d4","modified":1511410756798},{"_id":"source/_posts/《图解HTTP》学习笔记(2) - 简单的HTTP请求.md","hash":"f9bb19b03fcde23235f28e5194d24bdb8f001650","modified":1511445477000},{"_id":"public/2017/11/23/《图解HTTP》学习笔记-2-简单的HTTP请求/index.html","hash":"9407d9c86ac4a7a231d7163cac4f62af71ca6814","modified":1511445488909}],"Category":[{"name":"JavaScript","_id":"cjabyxuq20005myolsdqu1mq2"},{"name":"技术笔记","_id":"cjabyxuq40007myol6noq9r7g"}],"Data":[],"Page":[{"title":"前端常见布局方式整理","categories":"HTML/CSS","作者":"信达","date":"2017-10-25T09:19:33.000Z","tags":"JS插件,视频播放器","_content":"前端在开发过程中，布局方面有很多种可选方案，这些方案在不同的场景下，有各自的优势和劣势，本文将对目前主流的几种方案进行梳理，主要从原理、适用场景和优劣势方面进行。\n## 静态布局\n静态布局是传统的布局方式，单位是像素(px)，\n\n\n\n","source":"前端常见布局方式整理.md","raw":"---\ntitle: 前端常见布局方式整理\ncategories: HTML/CSS\n作者: 信达\ndate: 2017年10月24日 22:49:27\ntags: JS插件,视频播放器\n---\n前端在开发过程中，布局方面有很多种可选方案，这些方案在不同的场景下，有各自的优势和劣势，本文将对目前主流的几种方案进行梳理，主要从原理、适用场景和优劣势方面进行。\n## 静态布局\n静态布局是传统的布局方式，单位是像素(px)，\n\n\n\n","updated":"2017-10-25T09:19:33.000Z","path":"前端常见布局方式整理.html","comments":1,"layout":"page","_id":"cjabyxup80000myol0u6kzc6i","content":"<p>前端在开发过程中，布局方面有很多种可选方案，这些方案在不同的场景下，有各自的优势和劣势，本文将对目前主流的几种方案进行梳理，主要从原理、适用场景和优劣势方面进行。</p>\n<h2 id=\"静态布局\"><a href=\"#静态布局\" class=\"headerlink\" title=\"静态布局\"></a>静态布局</h2><p>静态布局是传统的布局方式，单位是像素(px)，</p>\n","site":{"data":{}},"excerpt":"","more":"<p>前端在开发过程中，布局方面有很多种可选方案，这些方案在不同的场景下，有各自的优势和劣势，本文将对目前主流的几种方案进行梳理，主要从原理、适用场景和优劣势方面进行。</p>\n<h2 id=\"静态布局\"><a href=\"#静态布局\" class=\"headerlink\" title=\"静态布局\"></a>静态布局</h2><p>静态布局是传统的布局方式，单位是像素(px)，</p>\n"},{"title":"categories","date":"2017-08-07T14:43:43.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-08-07 22:43:43\ntype: \"categories\"\n---\n","updated":"2017-08-07T14:44:31.000Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjabyxups0001myola9ft7auc","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"HybridApp笔记","categories":"JavaScript","作者":"信达","date":"2017-10-27T07:44:21.000Z","tags":"HybridApp","_content":"## 什么是HybridApp\nHybridApp又叫混合型应用，是一种处于NativeApp(源生应用)和WebApp(Web应用)之间的应用方案。NativeApp的开发和维护使用客户端语言，在安卓端为Java，在IOS端为Objective-C或者Swift，WebApp的开发和维护使用Web语言，也就是HTML5/CSS3/JavaScript等。而HybridApp是指在开发和维护中，既使用了客户端语言，也使用了Web语言，应用由两类语言配合完成。\n\n## 为什么选择HybridApp\n在已有NativeApp和WebApp的情况下，HybridApp依然出现并且被许多公司青睐，一定有其优势。首先我们来看一下NativeApp、WebApp和HybridApp各有什么特点：\n\n        | NativeApp | WebApp | HybridApp\n------- | --------- | ---------- | -------\n性能     | 较快 | 较慢 | 优于Web，逊于Native\n用户体验 | 较好 | 较差 | 接近Native\n开发成本 | 高，安卓与IOS各一套 | 低，一套代码兼容多端 | 较低，两者相结合\n开发速度 | 慢 | 快 | 较快\n分发方式 | 应用市场 | 网站地址 | 应用市场\n更新    | 需要更新APP版本 | 热更新 | 两者结合\n入口    | 独立入口 | 通过浏览器/微信等 | 独立入口\n能力    | 强，可以调用摄像/分享等 | 相对较弱 | 强\n\n可以看出，NativeApp和WebApp各有优势和劣势，而HybridApp的目的就是能够合理结合两者各自的优势，达到一种相对平衡的状态。\n\n## Native与H5的界限\n在一个HybridApp中，大多数功能Native与H5都可以实现，选择使用哪一种技术实现是一个很重要的问题，因此在项目开始前，就要有一个明确的思路和标准，以避免在开发过程中出现相互推诿等问题。由于每个公司的情况、产品功能及人员组成不同，因此并业界没有统一的标准，需要各公司根据实际情况来制定出一套适合自己使用的标准，下面是一套比较主流的标准：\n\n1. 与业务相关的内容，均由H5进行开发;\n2. 非业务的内容，H5能做的由H5实现，H5不能做的由Native实现;\n3. 特别需要优化体验的核心功能，可以由Native实现;\n\n分工的思路是Native主要负责提供容器，并负责一些H5不太好开发的功能或者特别需要优化体验的核心功能，而需求变更较为频繁的业务相关的开发尽量由H5完成，这样既可以利用Native分发渠道和独立入口的优势，又可以利用H5的开发效率高、成本低以及热更新的优势，在性能和用户体验方面，根据实际情况来选择两种技术即可，总体上，我们希望70%以上的功能由H5负责。\n\n\n\n","source":"draft/2017-10-26.md","raw":"---\ntitle: HybridApp笔记\ncategories: JavaScript\n作者: 信达\ndate: 2017年10月26日 10:39:59\ntags: HybridApp\n---\n## 什么是HybridApp\nHybridApp又叫混合型应用，是一种处于NativeApp(源生应用)和WebApp(Web应用)之间的应用方案。NativeApp的开发和维护使用客户端语言，在安卓端为Java，在IOS端为Objective-C或者Swift，WebApp的开发和维护使用Web语言，也就是HTML5/CSS3/JavaScript等。而HybridApp是指在开发和维护中，既使用了客户端语言，也使用了Web语言，应用由两类语言配合完成。\n\n## 为什么选择HybridApp\n在已有NativeApp和WebApp的情况下，HybridApp依然出现并且被许多公司青睐，一定有其优势。首先我们来看一下NativeApp、WebApp和HybridApp各有什么特点：\n\n        | NativeApp | WebApp | HybridApp\n------- | --------- | ---------- | -------\n性能     | 较快 | 较慢 | 优于Web，逊于Native\n用户体验 | 较好 | 较差 | 接近Native\n开发成本 | 高，安卓与IOS各一套 | 低，一套代码兼容多端 | 较低，两者相结合\n开发速度 | 慢 | 快 | 较快\n分发方式 | 应用市场 | 网站地址 | 应用市场\n更新    | 需要更新APP版本 | 热更新 | 两者结合\n入口    | 独立入口 | 通过浏览器/微信等 | 独立入口\n能力    | 强，可以调用摄像/分享等 | 相对较弱 | 强\n\n可以看出，NativeApp和WebApp各有优势和劣势，而HybridApp的目的就是能够合理结合两者各自的优势，达到一种相对平衡的状态。\n\n## Native与H5的界限\n在一个HybridApp中，大多数功能Native与H5都可以实现，选择使用哪一种技术实现是一个很重要的问题，因此在项目开始前，就要有一个明确的思路和标准，以避免在开发过程中出现相互推诿等问题。由于每个公司的情况、产品功能及人员组成不同，因此并业界没有统一的标准，需要各公司根据实际情况来制定出一套适合自己使用的标准，下面是一套比较主流的标准：\n\n1. 与业务相关的内容，均由H5进行开发;\n2. 非业务的内容，H5能做的由H5实现，H5不能做的由Native实现;\n3. 特别需要优化体验的核心功能，可以由Native实现;\n\n分工的思路是Native主要负责提供容器，并负责一些H5不太好开发的功能或者特别需要优化体验的核心功能，而需求变更较为频繁的业务相关的开发尽量由H5完成，这样既可以利用Native分发渠道和独立入口的优势，又可以利用H5的开发效率高、成本低以及热更新的优势，在性能和用户体验方面，根据实际情况来选择两种技术即可，总体上，我们希望70%以上的功能由H5负责。\n\n\n\n","updated":"2017-10-27T07:44:21.000Z","path":"draft/2017-10-26.html","comments":1,"layout":"page","_id":"cjabyxuq00003myol0z28w1qm","content":"<h2 id=\"什么是HybridApp\"><a href=\"#什么是HybridApp\" class=\"headerlink\" title=\"什么是HybridApp\"></a>什么是HybridApp</h2><p>HybridApp又叫混合型应用，是一种处于NativeApp(源生应用)和WebApp(Web应用)之间的应用方案。NativeApp的开发和维护使用客户端语言，在安卓端为Java，在IOS端为Objective-C或者Swift，WebApp的开发和维护使用Web语言，也就是HTML5/CSS3/JavaScript等。而HybridApp是指在开发和维护中，既使用了客户端语言，也使用了Web语言，应用由两类语言配合完成。</p>\n<h2 id=\"为什么选择HybridApp\"><a href=\"#为什么选择HybridApp\" class=\"headerlink\" title=\"为什么选择HybridApp\"></a>为什么选择HybridApp</h2><p>在已有NativeApp和WebApp的情况下，HybridApp依然出现并且被许多公司青睐，一定有其优势。首先我们来看一下NativeApp、WebApp和HybridApp各有什么特点：</p>\n<pre><code>| NativeApp | WebApp | HybridApp\n</code></pre><p>——- | ——— | ———- | ——-<br>性能     | 较快 | 较慢 | 优于Web，逊于Native<br>用户体验 | 较好 | 较差 | 接近Native<br>开发成本 | 高，安卓与IOS各一套 | 低，一套代码兼容多端 | 较低，两者相结合<br>开发速度 | 慢 | 快 | 较快<br>分发方式 | 应用市场 | 网站地址 | 应用市场<br>更新    | 需要更新APP版本 | 热更新 | 两者结合<br>入口    | 独立入口 | 通过浏览器/微信等 | 独立入口<br>能力    | 强，可以调用摄像/分享等 | 相对较弱 | 强</p>\n<p>可以看出，NativeApp和WebApp各有优势和劣势，而HybridApp的目的就是能够合理结合两者各自的优势，达到一种相对平衡的状态。</p>\n<h2 id=\"Native与H5的界限\"><a href=\"#Native与H5的界限\" class=\"headerlink\" title=\"Native与H5的界限\"></a>Native与H5的界限</h2><p>在一个HybridApp中，大多数功能Native与H5都可以实现，选择使用哪一种技术实现是一个很重要的问题，因此在项目开始前，就要有一个明确的思路和标准，以避免在开发过程中出现相互推诿等问题。由于每个公司的情况、产品功能及人员组成不同，因此并业界没有统一的标准，需要各公司根据实际情况来制定出一套适合自己使用的标准，下面是一套比较主流的标准：</p>\n<ol>\n<li>与业务相关的内容，均由H5进行开发;</li>\n<li>非业务的内容，H5能做的由H5实现，H5不能做的由Native实现;</li>\n<li>特别需要优化体验的核心功能，可以由Native实现;</li>\n</ol>\n<p>分工的思路是Native主要负责提供容器，并负责一些H5不太好开发的功能或者特别需要优化体验的核心功能，而需求变更较为频繁的业务相关的开发尽量由H5完成，这样既可以利用Native分发渠道和独立入口的优势，又可以利用H5的开发效率高、成本低以及热更新的优势，在性能和用户体验方面，根据实际情况来选择两种技术即可，总体上，我们希望70%以上的功能由H5负责。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"什么是HybridApp\"><a href=\"#什么是HybridApp\" class=\"headerlink\" title=\"什么是HybridApp\"></a>什么是HybridApp</h2><p>HybridApp又叫混合型应用，是一种处于NativeApp(源生应用)和WebApp(Web应用)之间的应用方案。NativeApp的开发和维护使用客户端语言，在安卓端为Java，在IOS端为Objective-C或者Swift，WebApp的开发和维护使用Web语言，也就是HTML5/CSS3/JavaScript等。而HybridApp是指在开发和维护中，既使用了客户端语言，也使用了Web语言，应用由两类语言配合完成。</p>\n<h2 id=\"为什么选择HybridApp\"><a href=\"#为什么选择HybridApp\" class=\"headerlink\" title=\"为什么选择HybridApp\"></a>为什么选择HybridApp</h2><p>在已有NativeApp和WebApp的情况下，HybridApp依然出现并且被许多公司青睐，一定有其优势。首先我们来看一下NativeApp、WebApp和HybridApp各有什么特点：</p>\n<pre><code>| NativeApp | WebApp | HybridApp\n</code></pre><p>——- | ——— | ———- | ——-<br>性能     | 较快 | 较慢 | 优于Web，逊于Native<br>用户体验 | 较好 | 较差 | 接近Native<br>开发成本 | 高，安卓与IOS各一套 | 低，一套代码兼容多端 | 较低，两者相结合<br>开发速度 | 慢 | 快 | 较快<br>分发方式 | 应用市场 | 网站地址 | 应用市场<br>更新    | 需要更新APP版本 | 热更新 | 两者结合<br>入口    | 独立入口 | 通过浏览器/微信等 | 独立入口<br>能力    | 强，可以调用摄像/分享等 | 相对较弱 | 强</p>\n<p>可以看出，NativeApp和WebApp各有优势和劣势，而HybridApp的目的就是能够合理结合两者各自的优势，达到一种相对平衡的状态。</p>\n<h2 id=\"Native与H5的界限\"><a href=\"#Native与H5的界限\" class=\"headerlink\" title=\"Native与H5的界限\"></a>Native与H5的界限</h2><p>在一个HybridApp中，大多数功能Native与H5都可以实现，选择使用哪一种技术实现是一个很重要的问题，因此在项目开始前，就要有一个明确的思路和标准，以避免在开发过程中出现相互推诿等问题。由于每个公司的情况、产品功能及人员组成不同，因此并业界没有统一的标准，需要各公司根据实际情况来制定出一套适合自己使用的标准，下面是一套比较主流的标准：</p>\n<ol>\n<li>与业务相关的内容，均由H5进行开发;</li>\n<li>非业务的内容，H5能做的由H5实现，H5不能做的由Native实现;</li>\n<li>特别需要优化体验的核心功能，可以由Native实现;</li>\n</ol>\n<p>分工的思路是Native主要负责提供容器，并负责一些H5不太好开发的功能或者特别需要优化体验的核心功能，而需求变更较为频繁的业务相关的开发尽量由H5完成，这样既可以利用Native分发渠道和独立入口的优势，又可以利用H5的开发效率高、成本低以及热更新的优势，在性能和用户体验方面，根据实际情况来选择两种技术即可，总体上，我们希望70%以上的功能由H5负责。</p>\n"},{"title":"提高React组件复用性，理解受控组件和非受控组件","categories":"JavaScript","作者":"信达","date":"2017-08-17T23:16:27.000Z","tags":["react"],"_content":"\n​ 从最初学习React时，就在各种学习资料中了解到React的优势之一是复用性强，随着项目组件库的不断积累，开发效率会越来越高。但当我在公司第一次使用React进行实际项目开发时，我遇到了比较糟糕的情况，在整个开发过程中，我所编写的组件似乎总是处于一种不可控的状态下，很难实现复用，导致开发过程产生了大量的重复工作，效率比较低，开发体验比较差。\n\n​ 为了解决这个问题，我在网上查阅了一些资料和博客，根据学习到的思路和方法，对之前编写的代码进行了一些调整，个人认为有一定的效果，相比于之前，我有了比较清晰的组件设计思路，编写的组件也能够比较方便的复用，以下是我总结的一些个人经验，虽然粗浅，但希望能够对初入React同学有所帮助。\n\n## 组件不能复用的常见原因\n\n```html\n<div>21312312</div>\n```\n\n","source":"draft/提高React组件复用性，理解受控组件和非受控组件.md","raw":"---\ntitle: 提高React组件复用性，理解受控组件和非受控组件\ncategories: JavaScript\n作者: 信达\ndate: 2017-08-18 07:16:27\ntags: \n- react\n---\n\n​ 从最初学习React时，就在各种学习资料中了解到React的优势之一是复用性强，随着项目组件库的不断积累，开发效率会越来越高。但当我在公司第一次使用React进行实际项目开发时，我遇到了比较糟糕的情况，在整个开发过程中，我所编写的组件似乎总是处于一种不可控的状态下，很难实现复用，导致开发过程产生了大量的重复工作，效率比较低，开发体验比较差。\n\n​ 为了解决这个问题，我在网上查阅了一些资料和博客，根据学习到的思路和方法，对之前编写的代码进行了一些调整，个人认为有一定的效果，相比于之前，我有了比较清晰的组件设计思路，编写的组件也能够比较方便的复用，以下是我总结的一些个人经验，虽然粗浅，但希望能够对初入React同学有所帮助。\n\n## 组件不能复用的常见原因\n\n```html\n<div>21312312</div>\n```\n\n","updated":"2017-10-19T09:55:50.000Z","path":"draft/提高React组件复用性，理解受控组件和非受控组件.html","comments":1,"layout":"page","_id":"cjabyxvbp000dmyolta7jbi7n","content":"<p>​ 从最初学习React时，就在各种学习资料中了解到React的优势之一是复用性强，随着项目组件库的不断积累，开发效率会越来越高。但当我在公司第一次使用React进行实际项目开发时，我遇到了比较糟糕的情况，在整个开发过程中，我所编写的组件似乎总是处于一种不可控的状态下，很难实现复用，导致开发过程产生了大量的重复工作，效率比较低，开发体验比较差。</p>\n<p>​ 为了解决这个问题，我在网上查阅了一些资料和博客，根据学习到的思路和方法，对之前编写的代码进行了一些调整，个人认为有一定的效果，相比于之前，我有了比较清晰的组件设计思路，编写的组件也能够比较方便的复用，以下是我总结的一些个人经验，虽然粗浅，但希望能够对初入React同学有所帮助。</p>\n<h2 id=\"组件不能复用的常见原因\"><a href=\"#组件不能复用的常见原因\" class=\"headerlink\" title=\"组件不能复用的常见原因\"></a>组件不能复用的常见原因</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>21312312<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>​ 从最初学习React时，就在各种学习资料中了解到React的优势之一是复用性强，随着项目组件库的不断积累，开发效率会越来越高。但当我在公司第一次使用React进行实际项目开发时，我遇到了比较糟糕的情况，在整个开发过程中，我所编写的组件似乎总是处于一种不可控的状态下，很难实现复用，导致开发过程产生了大量的重复工作，效率比较低，开发体验比较差。</p>\n<p>​ 为了解决这个问题，我在网上查阅了一些资料和博客，根据学习到的思路和方法，对之前编写的代码进行了一些调整，个人认为有一定的效果，相比于之前，我有了比较清晰的组件设计思路，编写的组件也能够比较方便的复用，以下是我总结的一些个人经验，虽然粗浅，但希望能够对初入React同学有所帮助。</p>\n<h2 id=\"组件不能复用的常见原因\"><a href=\"#组件不能复用的常见原因\" class=\"headerlink\" title=\"组件不能复用的常见原因\"></a>组件不能复用的常见原因</h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>21312312<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n"}],"Post":[{"title":"JWPlayer播放器中文使用文档","作者":"信达","date":"2017-08-07T14:09:20.000Z","_content":"本文档基于 **JWPlayer 7.12.2** 版本。\n\n文档中除了官方API外，还有部分基于官方API封装的扩展功能，扩展部分在文档中有明显标识，若使用扩展功能，需要在项目中额外引用 **xy.jwplayer.js** ，获取方式在本文档快速使用部分。\n\n## 快速使用\n\n因文档较长，这里还准备了一份带目录的文档：[点击查看](http://xinda.site/document/published/JWPlayer%E6%92%AD%E6%94%BE%E5%99%A8%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97(%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3).html)\n\n### 下载文件\n\n 官方文件和扩展文件   [点此下载](http://ouh8ga02y.bkt.clouddn.com/xy-jwplayer.zip) ，下载后解压，将整个文件夹放入项目中。\n\n### 引入文件\n\n若仅使用官方API，则在页面中引入 **jwplayer.js**；\n\n若需要使用官方API和扩展API，则在页面引入 **jwplayer.js** 和 **xy.jwplayer.js** \n\n### 写入HTML代码\n\n1. 在html中为JWPlayer准备好容器\n2. 实例化一个JWPlayer对象\n3. 调用setup()函数进行初始化\n\n> 快速使用完整示例：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n    <script src=\"./资源路径/jwplayer.js\"></script>\n    <!--如果你需要使用文档中标注为扩展的功能，则需要引用xy.jwplayer.js-->\n  \t<script src=\"./资源路径/xy.jwplayer.js\"></script>\n</head>\n<body>\n<div id=\"player\"></div>\n</body>\n<script type=\"text/javascript\">\n\n    var player = jwplayer('player');\n\n    player.setup({\n      \t// 视频地址\n        file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\", \n      \n        /*\n        *  Ps：示例中仅传入了视频地址(file)一个参数\n        *  实际可以根据需要配置许多参数\n        *  具体参数列表可以查看下方[初始化配置项]部分\n        * */\n        * \n    });\n \n</script>\n\n</html>\n```\n\n## 初始化选项\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    // 将要播放的视频地址\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\", \n    // 视频播放前显示的图片\n    image: \"https://www.nvsay.com/uploads/allimg/160408/34-16040Q61P21U.jpg\",\n    // 播放器加载完毕后是否自动播放视频，true自动播放，false不自动播放\n    autostart:false,\n    // 设置播放器的音量，1-100之间\n    volume:100,\n    //播放器是否静音\n    mute:false,\n    // 设置播放器的宽度\n    width:640,\n    // 设置播放器的高度\n    height:360,\n    // 播放完当前视频后，是否继续播放播放列表中的下一个视频\n    repeat:true,\n});\n```\n\n## JWPlayer属性\n\n#### 获取宽度 getWidth()  \n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\nvar playerWidth = player.getWidth();\n\nconsole.log(playerWidth); \n// log -> 播放器宽度\n```\n\n#### 获取高度 getHeight() \n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\nvar playerHeight = player.getHeight();\n\nconsole.log(playerHeight); \n// log -> 播放器高度\n```\n\n#### 获取播放列表 getPlaylist() \n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\nvar playList = player.getPlaylist();\n\nconsole.log(playList); \n// 本例log -> [object]\n// 如果播放列表中有多个播放项，log -> [object，object，···]\n```\n\n#### 获取完整DOM getContainer()\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\nvar playerDOM = player.getContainer();\n\nconsole.log(playerDOM); \n// log -> 播放器的完整DOM\n```\n\n#### 获取列表索引值 getPlaylistIndex()\n\n```javascript\n// 获取当前视频在播放列表中的索引值\n\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\nvar playListIndex = player.getPlaylistIndex();\n\nconsole.log(playListIndex); \n// log -> 当前视频在播放列表中的索引值，如：1\n```\n\n#### 获取列表指定项信息 getPlaylistItem(index)\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\nvar playListItem = player.getPlaylistItem(0);\n\nconsole.log(playListItem); \n// log -> 播放列表中第一项的信息\n```\n## JWPlayer控制函数\n\n#### 播放视频 play()\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n$('#btn').click(function(){\n    // 视频将开始播放\n    player.play();    \n})\n```\n\n#### 暂停播放 pause()\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n$('#btn').click(function(){\n    // 视频将暂停\n    player.pause();\n})\n```\n\n#### 播放下一项 playlistNext()\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n$('#btn').click(function(){\n    // 视频将切换至播放列表中的下一项\n    player.playlistNext();\n})\n```\n\n#### 播放列表指定项 playlistItem(index)\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n$('#btn').click(function(){\n    // 视频将切换到播放列表的第1项\n    player.playlistItem(0);\n})\n```\n\n#### 视频跳转指定秒 seek(*position*)\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n$('#btn').click(function(){\n    // 视频将切换到第10秒\n    player.seek(10);\n})\n```\n\n#### 改变播放器宽高 resize(*width*, *height*) \n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n$('#btn').click(function(){\n    // 播放器宽度将改为640px，高度将改为360px\n    player.resize(640,360);\n})\n```\n\n#### 更新播放列表 load()\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n// 准备好播放列表\nvar newPlayList = [\n  {\n    file:'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'\n  },\n  {\n    file:'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'\n  },{\n    file:'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'\n  }\n];\n\n$('#btn').click(function(){\n    // 更新播放器的播放列表\n    player.load(newPlayList);\n})\n```\n\n#### 视频前插广告[扩展] xyJWPlayerAddAddBefore(obj,url,isShut,shutImgUrl)\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n/*\n * 监听视频准备完毕\n *   当视频准备完毕时，xyJWPlayerAddAd，在视频中插入一段广告\n *   调取插入广告方法，参数:\n *      1.播放器实例化对象\n *      2.广告地址\n *      3.广告是否允许跳过,true/false，默认为true\n *      4.广告图标地址，参数3为false，此参数则不会被使用\n * */\nplayer.on('ready',function () {\n  \n  xyJWPlayerAddAddBefore(\n    \n    //第一个参数，播放器实例化对象\n    player,\n    \n    // 第二个参数，广告地址\n    '//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4',\n    \n    // 第三个参数，广告是否允许跳过,true/false，默认为true\n    true,\n    \n    // 第四个参数，广告图标地址，参数3为false，此参数则不会被使用\n    './src/skip.png'\n  );\n  \n })\n```\n\n#### 立即插入广告[扩展] xyJWPlayerAddAd(obj,url,isShut,shutImgUrl)\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n/*\n * 点击按钮在视频当前位置插入一段广告\n *      1.播放器实例化对象\n *      2.广告地址\n *      3.广告是否允许跳过,true/false，默认为true\n *      4.广告图标地址，参数3为false，此参数则不会被使用\n * */\n$('#btn').click(function(){\n  \n  \txyJWPlayerAddAd(\n    \n    //第一个参数，播放器实例化对象\n    player,\n    \n    // 第二个参数，广告地址\n    '//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4',\n    \n    // 第三个参数，广告是否允许跳过,true/false，默认为true\n    true,\n    \n    // 第四个参数，广告图标地址，参数3为false，此参数则不会被使用\n    './src/skip.png'\n  );\n  \n});\n```\n\n#### 删除实例 remove()  \n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n// 调用后实例被销毁\nplayer.remove();\n```\n\n## JWPlayer回调\n\n#### 初始化完成 ready\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.on('ready',function(){\n    // 在这里编写的代码将在播放器初始化完毕后执行\n    // 这是一个最早触发的API\n})\n```\n\n#### 任何动作 all\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.on('all',function(){\n    // 在这里编写的代码在播放器执行任何操作后都会执行\n})\n```\n\n#### 开始缓冲 buffer \n\n```javascript\n// 一般是第一次播放时才会触发\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.on('buffer',function(){\n    // 在这里编写的代码将在开始缓存时执行\n    // 一般是第一次开始播放时触发\n})\n```\n\n#### 初始化出错 setupError\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\nplayer.on('setupError',function(){\n    // 在初始化出现错误时执行\n})\n```\n\n#### 实例销毁后 remove\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.on('remove',function(){\n\t// 当实例被销毁时执行\n})\n```\n\n#### 列表更新后 playlist\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.on('playlist',function(){\n\t// 当更新播放列表时执行\n})\n```\n\n#### 切换视频后 playlistItem\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.on('playlistItem',function(){\n\t// 当切换播放列表中的项时执行，如：播放下一个视频\n})\n```\n\n#### 列表播放完毕 playlistComplete\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.on('playlistComplete',function(){\n\t// 当播放列表全部播放完毕时出发\n    // Ps:当播放器设置为循环播放时，该回调方法不会执行\n})\n```\n\n## JWPlayer交互按钮\n\n#### 增加按钮通用方法 addButton()\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n// 增加一个交互按钮\nplayer.addButton(\n    // 第一个参数，用来指定添加图形按钮的图片地址\n    \"//icons.jwplayer.com/icons/white/download.svg\",\n    \n    // 第二个参数，用来指定鼠标移到按钮上的提示文字\n    \"快点击我！\",\n    \n    // 第三个参数，用来指定点击按钮后所执行的代码\n    function() {\n       // code\n    },\n    \n    // 第四个参数，用来为按钮指定一个唯一名称，jwplayer内部使用\n    \"btn\"\n);  \n```\n\n#### 删除按钮通用方法 removeButton()\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n// 删除一个已定义过的交互按钮\nplayer.removeButton('btn'); \n// btn为交互按钮的标识，在定义此按钮时指定，addButton()的第四个参数\n```\n\n\n\n\n\n","source":"_posts/JWPlayer播放器中文使用文档.md","raw":"---\ntitle: JWPlayer播放器中文使用文档\ncategories: JavaScript\n作者: 信达\ndate: 2017-08-07 22:09:20\ntags: JS插件,视频播放器\n---\n本文档基于 **JWPlayer 7.12.2** 版本。\n\n文档中除了官方API外，还有部分基于官方API封装的扩展功能，扩展部分在文档中有明显标识，若使用扩展功能，需要在项目中额外引用 **xy.jwplayer.js** ，获取方式在本文档快速使用部分。\n\n## 快速使用\n\n因文档较长，这里还准备了一份带目录的文档：[点击查看](http://xinda.site/document/published/JWPlayer%E6%92%AD%E6%94%BE%E5%99%A8%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97(%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3).html)\n\n### 下载文件\n\n 官方文件和扩展文件   [点此下载](http://ouh8ga02y.bkt.clouddn.com/xy-jwplayer.zip) ，下载后解压，将整个文件夹放入项目中。\n\n### 引入文件\n\n若仅使用官方API，则在页面中引入 **jwplayer.js**；\n\n若需要使用官方API和扩展API，则在页面引入 **jwplayer.js** 和 **xy.jwplayer.js** \n\n### 写入HTML代码\n\n1. 在html中为JWPlayer准备好容器\n2. 实例化一个JWPlayer对象\n3. 调用setup()函数进行初始化\n\n> 快速使用完整示例：\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n    <script src=\"./资源路径/jwplayer.js\"></script>\n    <!--如果你需要使用文档中标注为扩展的功能，则需要引用xy.jwplayer.js-->\n  \t<script src=\"./资源路径/xy.jwplayer.js\"></script>\n</head>\n<body>\n<div id=\"player\"></div>\n</body>\n<script type=\"text/javascript\">\n\n    var player = jwplayer('player');\n\n    player.setup({\n      \t// 视频地址\n        file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\", \n      \n        /*\n        *  Ps：示例中仅传入了视频地址(file)一个参数\n        *  实际可以根据需要配置许多参数\n        *  具体参数列表可以查看下方[初始化配置项]部分\n        * */\n        * \n    });\n \n</script>\n\n</html>\n```\n\n## 初始化选项\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    // 将要播放的视频地址\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\", \n    // 视频播放前显示的图片\n    image: \"https://www.nvsay.com/uploads/allimg/160408/34-16040Q61P21U.jpg\",\n    // 播放器加载完毕后是否自动播放视频，true自动播放，false不自动播放\n    autostart:false,\n    // 设置播放器的音量，1-100之间\n    volume:100,\n    //播放器是否静音\n    mute:false,\n    // 设置播放器的宽度\n    width:640,\n    // 设置播放器的高度\n    height:360,\n    // 播放完当前视频后，是否继续播放播放列表中的下一个视频\n    repeat:true,\n});\n```\n\n## JWPlayer属性\n\n#### 获取宽度 getWidth()  \n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\nvar playerWidth = player.getWidth();\n\nconsole.log(playerWidth); \n// log -> 播放器宽度\n```\n\n#### 获取高度 getHeight() \n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\nvar playerHeight = player.getHeight();\n\nconsole.log(playerHeight); \n// log -> 播放器高度\n```\n\n#### 获取播放列表 getPlaylist() \n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\nvar playList = player.getPlaylist();\n\nconsole.log(playList); \n// 本例log -> [object]\n// 如果播放列表中有多个播放项，log -> [object，object，···]\n```\n\n#### 获取完整DOM getContainer()\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\nvar playerDOM = player.getContainer();\n\nconsole.log(playerDOM); \n// log -> 播放器的完整DOM\n```\n\n#### 获取列表索引值 getPlaylistIndex()\n\n```javascript\n// 获取当前视频在播放列表中的索引值\n\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\nvar playListIndex = player.getPlaylistIndex();\n\nconsole.log(playListIndex); \n// log -> 当前视频在播放列表中的索引值，如：1\n```\n\n#### 获取列表指定项信息 getPlaylistItem(index)\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\nvar playListItem = player.getPlaylistItem(0);\n\nconsole.log(playListItem); \n// log -> 播放列表中第一项的信息\n```\n## JWPlayer控制函数\n\n#### 播放视频 play()\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n$('#btn').click(function(){\n    // 视频将开始播放\n    player.play();    \n})\n```\n\n#### 暂停播放 pause()\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n$('#btn').click(function(){\n    // 视频将暂停\n    player.pause();\n})\n```\n\n#### 播放下一项 playlistNext()\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n$('#btn').click(function(){\n    // 视频将切换至播放列表中的下一项\n    player.playlistNext();\n})\n```\n\n#### 播放列表指定项 playlistItem(index)\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n$('#btn').click(function(){\n    // 视频将切换到播放列表的第1项\n    player.playlistItem(0);\n})\n```\n\n#### 视频跳转指定秒 seek(*position*)\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n$('#btn').click(function(){\n    // 视频将切换到第10秒\n    player.seek(10);\n})\n```\n\n#### 改变播放器宽高 resize(*width*, *height*) \n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n$('#btn').click(function(){\n    // 播放器宽度将改为640px，高度将改为360px\n    player.resize(640,360);\n})\n```\n\n#### 更新播放列表 load()\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n// 准备好播放列表\nvar newPlayList = [\n  {\n    file:'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'\n  },\n  {\n    file:'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'\n  },{\n    file:'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'\n  }\n];\n\n$('#btn').click(function(){\n    // 更新播放器的播放列表\n    player.load(newPlayList);\n})\n```\n\n#### 视频前插广告[扩展] xyJWPlayerAddAddBefore(obj,url,isShut,shutImgUrl)\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n/*\n * 监听视频准备完毕\n *   当视频准备完毕时，xyJWPlayerAddAd，在视频中插入一段广告\n *   调取插入广告方法，参数:\n *      1.播放器实例化对象\n *      2.广告地址\n *      3.广告是否允许跳过,true/false，默认为true\n *      4.广告图标地址，参数3为false，此参数则不会被使用\n * */\nplayer.on('ready',function () {\n  \n  xyJWPlayerAddAddBefore(\n    \n    //第一个参数，播放器实例化对象\n    player,\n    \n    // 第二个参数，广告地址\n    '//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4',\n    \n    // 第三个参数，广告是否允许跳过,true/false，默认为true\n    true,\n    \n    // 第四个参数，广告图标地址，参数3为false，此参数则不会被使用\n    './src/skip.png'\n  );\n  \n })\n```\n\n#### 立即插入广告[扩展] xyJWPlayerAddAd(obj,url,isShut,shutImgUrl)\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n/*\n * 点击按钮在视频当前位置插入一段广告\n *      1.播放器实例化对象\n *      2.广告地址\n *      3.广告是否允许跳过,true/false，默认为true\n *      4.广告图标地址，参数3为false，此参数则不会被使用\n * */\n$('#btn').click(function(){\n  \n  \txyJWPlayerAddAd(\n    \n    //第一个参数，播放器实例化对象\n    player,\n    \n    // 第二个参数，广告地址\n    '//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4',\n    \n    // 第三个参数，广告是否允许跳过,true/false，默认为true\n    true,\n    \n    // 第四个参数，广告图标地址，参数3为false，此参数则不会被使用\n    './src/skip.png'\n  );\n  \n});\n```\n\n#### 删除实例 remove()  \n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n// 调用后实例被销毁\nplayer.remove();\n```\n\n## JWPlayer回调\n\n#### 初始化完成 ready\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.on('ready',function(){\n    // 在这里编写的代码将在播放器初始化完毕后执行\n    // 这是一个最早触发的API\n})\n```\n\n#### 任何动作 all\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.on('all',function(){\n    // 在这里编写的代码在播放器执行任何操作后都会执行\n})\n```\n\n#### 开始缓冲 buffer \n\n```javascript\n// 一般是第一次播放时才会触发\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.on('buffer',function(){\n    // 在这里编写的代码将在开始缓存时执行\n    // 一般是第一次开始播放时触发\n})\n```\n\n#### 初始化出错 setupError\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\nplayer.on('setupError',function(){\n    // 在初始化出现错误时执行\n})\n```\n\n#### 实例销毁后 remove\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.on('remove',function(){\n\t// 当实例被销毁时执行\n})\n```\n\n#### 列表更新后 playlist\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.on('playlist',function(){\n\t// 当更新播放列表时执行\n})\n```\n\n#### 切换视频后 playlistItem\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.on('playlistItem',function(){\n\t// 当切换播放列表中的项时执行，如：播放下一个视频\n})\n```\n\n#### 列表播放完毕 playlistComplete\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.on('playlistComplete',function(){\n\t// 当播放列表全部播放完毕时出发\n    // Ps:当播放器设置为循环播放时，该回调方法不会执行\n})\n```\n\n## JWPlayer交互按钮\n\n#### 增加按钮通用方法 addButton()\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n// 增加一个交互按钮\nplayer.addButton(\n    // 第一个参数，用来指定添加图形按钮的图片地址\n    \"//icons.jwplayer.com/icons/white/download.svg\",\n    \n    // 第二个参数，用来指定鼠标移到按钮上的提示文字\n    \"快点击我！\",\n    \n    // 第三个参数，用来指定点击按钮后所执行的代码\n    function() {\n       // code\n    },\n    \n    // 第四个参数，用来为按钮指定一个唯一名称，jwplayer内部使用\n    \"btn\"\n);  \n```\n\n#### 删除按钮通用方法 removeButton()\n\n```javascript\n// 代码示例\nvar player = jwplayer('player');\n\nplayer.setup({\n    file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\",\n});\n\n// 删除一个已定义过的交互按钮\nplayer.removeButton('btn'); \n// btn为交互按钮的标识，在定义此按钮时指定，addButton()的第四个参数\n```\n\n\n\n\n\n","slug":"JWPlayer播放器中文使用文档","published":1,"updated":"2017-10-24T14:54:54.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjabyxupu0002myolkxkt9by8","content":"<p>本文档基于 <strong>JWPlayer 7.12.2</strong> 版本。</p>\n<p>文档中除了官方API外，还有部分基于官方API封装的扩展功能，扩展部分在文档中有明显标识，若使用扩展功能，需要在项目中额外引用 <strong>xy.jwplayer.js</strong> ，获取方式在本文档快速使用部分。</p>\n<h2 id=\"快速使用\"><a href=\"#快速使用\" class=\"headerlink\" title=\"快速使用\"></a>快速使用</h2><p>因文档较长，这里还准备了一份带目录的文档：<a href=\"http://xinda.site/document/published/JWPlayer%E6%92%AD%E6%94%BE%E5%99%A8%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97(%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3\" target=\"_blank\" rel=\"external\">点击查看</a>.html)</p>\n<h3 id=\"下载文件\"><a href=\"#下载文件\" class=\"headerlink\" title=\"下载文件\"></a>下载文件</h3><p> 官方文件和扩展文件   <a href=\"http://ouh8ga02y.bkt.clouddn.com/xy-jwplayer.zip\" target=\"_blank\" rel=\"external\">点此下载</a> ，下载后解压，将整个文件夹放入项目中。</p>\n<h3 id=\"引入文件\"><a href=\"#引入文件\" class=\"headerlink\" title=\"引入文件\"></a>引入文件</h3><p>若仅使用官方API，则在页面中引入 <strong>jwplayer.js</strong>；</p>\n<p>若需要使用官方API和扩展API，则在页面引入 <strong>jwplayer.js</strong> 和 <strong>xy.jwplayer.js</strong> </p>\n<h3 id=\"写入HTML代码\"><a href=\"#写入HTML代码\" class=\"headerlink\" title=\"写入HTML代码\"></a>写入HTML代码</h3><ol>\n<li>在html中为JWPlayer准备好容器</li>\n<li>实例化一个JWPlayer对象</li>\n<li>调用setup()函数进行初始化</li>\n</ol>\n<blockquote>\n<p>快速使用完整示例：</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./资源路径/jwplayer.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!--如果你需要使用文档中标注为扩展的功能，则需要引用xy.jwplayer.js--&gt;</span></div><div class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./资源路径/xy.jwplayer.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"player\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"undefined\">    var player = jwplayer('player');</span></div><div class=\"line\"><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"undefined\">    player.setup(&#123;</span></div><div class=\"line\"><span class=\"undefined\">      \t// 视频地址</span></div><div class=\"line\"><span class=\"undefined\">        file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\", </span></div><div class=\"line\"><span class=\"undefined\">      </span></div><div class=\"line\"><span class=\"undefined\">        /*</span></div><div class=\"line\"><span class=\"undefined\">        *  Ps：示例中仅传入了视频地址(file)一个参数</span></div><div class=\"line\"><span class=\"undefined\">        *  实际可以根据需要配置许多参数</span></div><div class=\"line\"><span class=\"undefined\">        *  具体参数列表可以查看下方[初始化配置项]部分</span></div><div class=\"line\"><span class=\"undefined\">        * */</span></div><div class=\"line\"><span class=\"undefined\">        * </span></div><div class=\"line\"><span class=\"undefined\">    &#125;);</span></div><div class=\"line\"><span class=\"undefined\"> </span></div><div class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"初始化选项\"><a href=\"#初始化选项\" class=\"headerlink\" title=\"初始化选项\"></a>初始化选项</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    <span class=\"comment\">// 将要播放的视频地址</span></div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>, </div><div class=\"line\">    <span class=\"comment\">// 视频播放前显示的图片</span></div><div class=\"line\">    image: <span class=\"string\">\"https://www.nvsay.com/uploads/allimg/160408/34-16040Q61P21U.jpg\"</span>,</div><div class=\"line\">    <span class=\"comment\">// 播放器加载完毕后是否自动播放视频，true自动播放，false不自动播放</span></div><div class=\"line\">    autostart:<span class=\"literal\">false</span>,</div><div class=\"line\">    <span class=\"comment\">// 设置播放器的音量，1-100之间</span></div><div class=\"line\">    volume:<span class=\"number\">100</span>,</div><div class=\"line\">    <span class=\"comment\">//播放器是否静音</span></div><div class=\"line\">    mute:<span class=\"literal\">false</span>,</div><div class=\"line\">    <span class=\"comment\">// 设置播放器的宽度</span></div><div class=\"line\">    width:<span class=\"number\">640</span>,</div><div class=\"line\">    <span class=\"comment\">// 设置播放器的高度</span></div><div class=\"line\">    height:<span class=\"number\">360</span>,</div><div class=\"line\">    <span class=\"comment\">// 播放完当前视频后，是否继续播放播放列表中的下一个视频</span></div><div class=\"line\">    repeat:<span class=\"literal\">true</span>,</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"JWPlayer属性\"><a href=\"#JWPlayer属性\" class=\"headerlink\" title=\"JWPlayer属性\"></a>JWPlayer属性</h2><h4 id=\"获取宽度-getWidth\"><a href=\"#获取宽度-getWidth\" class=\"headerlink\" title=\"获取宽度 getWidth()\"></a>获取宽度 getWidth()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> playerWidth = player.getWidth();</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(playerWidth); </div><div class=\"line\"><span class=\"comment\">// log -&gt; 播放器宽度</span></div></pre></td></tr></table></figure>\n<h4 id=\"获取高度-getHeight\"><a href=\"#获取高度-getHeight\" class=\"headerlink\" title=\"获取高度 getHeight()\"></a>获取高度 getHeight()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> playerHeight = player.getHeight();</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(playerHeight); </div><div class=\"line\"><span class=\"comment\">// log -&gt; 播放器高度</span></div></pre></td></tr></table></figure>\n<h4 id=\"获取播放列表-getPlaylist\"><a href=\"#获取播放列表-getPlaylist\" class=\"headerlink\" title=\"获取播放列表 getPlaylist()\"></a>获取播放列表 getPlaylist()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> playList = player.getPlaylist();</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(playList); </div><div class=\"line\"><span class=\"comment\">// 本例log -&gt; [object]</span></div><div class=\"line\"><span class=\"comment\">// 如果播放列表中有多个播放项，log -&gt; [object，object，···]</span></div></pre></td></tr></table></figure>\n<h4 id=\"获取完整DOM-getContainer\"><a href=\"#获取完整DOM-getContainer\" class=\"headerlink\" title=\"获取完整DOM getContainer()\"></a>获取完整DOM getContainer()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> playerDOM = player.getContainer();</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(playerDOM); </div><div class=\"line\"><span class=\"comment\">// log -&gt; 播放器的完整DOM</span></div></pre></td></tr></table></figure>\n<h4 id=\"获取列表索引值-getPlaylistIndex\"><a href=\"#获取列表索引值-getPlaylistIndex\" class=\"headerlink\" title=\"获取列表索引值 getPlaylistIndex()\"></a>获取列表索引值 getPlaylistIndex()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 获取当前视频在播放列表中的索引值</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> playListIndex = player.getPlaylistIndex();</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(playListIndex); </div><div class=\"line\"><span class=\"comment\">// log -&gt; 当前视频在播放列表中的索引值，如：1</span></div></pre></td></tr></table></figure>\n<h4 id=\"获取列表指定项信息-getPlaylistItem-index\"><a href=\"#获取列表指定项信息-getPlaylistItem-index\" class=\"headerlink\" title=\"获取列表指定项信息 getPlaylistItem(index)\"></a>获取列表指定项信息 getPlaylistItem(index)</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> playListItem = player.getPlaylistItem(<span class=\"number\">0</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(playListItem); </div><div class=\"line\"><span class=\"comment\">// log -&gt; 播放列表中第一项的信息</span></div></pre></td></tr></table></figure>\n<h2 id=\"JWPlayer控制函数\"><a href=\"#JWPlayer控制函数\" class=\"headerlink\" title=\"JWPlayer控制函数\"></a>JWPlayer控制函数</h2><h4 id=\"播放视频-play\"><a href=\"#播放视频-play\" class=\"headerlink\" title=\"播放视频 play()\"></a>播放视频 play()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 视频将开始播放</span></div><div class=\"line\">    player.play();    </div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"暂停播放-pause\"><a href=\"#暂停播放-pause\" class=\"headerlink\" title=\"暂停播放 pause()\"></a>暂停播放 pause()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 视频将暂停</span></div><div class=\"line\">    player.pause();</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"播放下一项-playlistNext\"><a href=\"#播放下一项-playlistNext\" class=\"headerlink\" title=\"播放下一项 playlistNext()\"></a>播放下一项 playlistNext()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 视频将切换至播放列表中的下一项</span></div><div class=\"line\">    player.playlistNext();</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"播放列表指定项-playlistItem-index\"><a href=\"#播放列表指定项-playlistItem-index\" class=\"headerlink\" title=\"播放列表指定项 playlistItem(index)\"></a>播放列表指定项 playlistItem(index)</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 视频将切换到播放列表的第1项</span></div><div class=\"line\">    player.playlistItem(<span class=\"number\">0</span>);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"视频跳转指定秒-seek-position\"><a href=\"#视频跳转指定秒-seek-position\" class=\"headerlink\" title=\"视频跳转指定秒 seek(position)\"></a>视频跳转指定秒 seek(<em>position</em>)</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 视频将切换到第10秒</span></div><div class=\"line\">    player.seek(<span class=\"number\">10</span>);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"改变播放器宽高-resize-width-height\"><a href=\"#改变播放器宽高-resize-width-height\" class=\"headerlink\" title=\"改变播放器宽高 resize(width, height)\"></a>改变播放器宽高 resize(<em>width</em>, <em>height</em>)</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 播放器宽度将改为640px，高度将改为360px</span></div><div class=\"line\">    player.resize(<span class=\"number\">640</span>,<span class=\"number\">360</span>);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"更新播放列表-load\"><a href=\"#更新播放列表-load\" class=\"headerlink\" title=\"更新播放列表 load()\"></a>更新播放列表 load()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 准备好播放列表</span></div><div class=\"line\"><span class=\"keyword\">var</span> newPlayList = [</div><div class=\"line\">  &#123;</div><div class=\"line\">    file:<span class=\"string\">'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  &#123;</div><div class=\"line\">    file:<span class=\"string\">'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'</span></div><div class=\"line\">  &#125;,&#123;</div><div class=\"line\">    file:<span class=\"string\">'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">];</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 更新播放器的播放列表</span></div><div class=\"line\">    player.load(newPlayList);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"视频前插广告-扩展-xyJWPlayerAddAddBefore-obj-url-isShut-shutImgUrl\"><a href=\"#视频前插广告-扩展-xyJWPlayerAddAddBefore-obj-url-isShut-shutImgUrl\" class=\"headerlink\" title=\"视频前插广告[扩展] xyJWPlayerAddAddBefore(obj,url,isShut,shutImgUrl)\"></a>视频前插广告[扩展] xyJWPlayerAddAddBefore(obj,url,isShut,shutImgUrl)</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"><span class=\"comment\"> * 监听视频准备完毕</span></div><div class=\"line\"><span class=\"comment\"> *   当视频准备完毕时，xyJWPlayerAddAd，在视频中插入一段广告</span></div><div class=\"line\"><span class=\"comment\"> *   调取插入广告方法，参数:</span></div><div class=\"line\"><span class=\"comment\"> *      1.播放器实例化对象</span></div><div class=\"line\"><span class=\"comment\"> *      2.广告地址</span></div><div class=\"line\"><span class=\"comment\"> *      3.广告是否允许跳过,true/false，默认为true</span></div><div class=\"line\"><span class=\"comment\"> *      4.广告图标地址，参数3为false，此参数则不会被使用</span></div><div class=\"line\"><span class=\"comment\"> * */</span></div><div class=\"line\">player.on(<span class=\"string\">'ready'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">  xyJWPlayerAddAddBefore(</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//第一个参数，播放器实例化对象</span></div><div class=\"line\">    player,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第二个参数，广告地址</span></div><div class=\"line\">    <span class=\"string\">'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'</span>,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第三个参数，广告是否允许跳过,true/false，默认为true</span></div><div class=\"line\">    <span class=\"literal\">true</span>,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第四个参数，广告图标地址，参数3为false，此参数则不会被使用</span></div><div class=\"line\">    <span class=\"string\">'./src/skip.png'</span></div><div class=\"line\">  );</div><div class=\"line\">  </div><div class=\"line\"> &#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"立即插入广告-扩展-xyJWPlayerAddAd-obj-url-isShut-shutImgUrl\"><a href=\"#立即插入广告-扩展-xyJWPlayerAddAd-obj-url-isShut-shutImgUrl\" class=\"headerlink\" title=\"立即插入广告[扩展] xyJWPlayerAddAd(obj,url,isShut,shutImgUrl)\"></a>立即插入广告[扩展] xyJWPlayerAddAd(obj,url,isShut,shutImgUrl)</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"><span class=\"comment\"> * 点击按钮在视频当前位置插入一段广告</span></div><div class=\"line\"><span class=\"comment\"> *      1.播放器实例化对象</span></div><div class=\"line\"><span class=\"comment\"> *      2.广告地址</span></div><div class=\"line\"><span class=\"comment\"> *      3.广告是否允许跳过,true/false，默认为true</span></div><div class=\"line\"><span class=\"comment\"> *      4.广告图标地址，参数3为false，此参数则不会被使用</span></div><div class=\"line\"><span class=\"comment\"> * */</span></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  </div><div class=\"line\">  \txyJWPlayerAddAd(</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//第一个参数，播放器实例化对象</span></div><div class=\"line\">    player,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第二个参数，广告地址</span></div><div class=\"line\">    <span class=\"string\">'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'</span>,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第三个参数，广告是否允许跳过,true/false，默认为true</span></div><div class=\"line\">    <span class=\"literal\">true</span>,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第四个参数，广告图标地址，参数3为false，此参数则不会被使用</span></div><div class=\"line\">    <span class=\"string\">'./src/skip.png'</span></div><div class=\"line\">  );</div><div class=\"line\">  </div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h4 id=\"删除实例-remove\"><a href=\"#删除实例-remove\" class=\"headerlink\" title=\"删除实例 remove()\"></a>删除实例 remove()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 调用后实例被销毁</span></div><div class=\"line\">player.remove();</div></pre></td></tr></table></figure>\n<h2 id=\"JWPlayer回调\"><a href=\"#JWPlayer回调\" class=\"headerlink\" title=\"JWPlayer回调\"></a>JWPlayer回调</h2><h4 id=\"初始化完成-ready\"><a href=\"#初始化完成-ready\" class=\"headerlink\" title=\"初始化完成 ready\"></a>初始化完成 ready</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'ready'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 在这里编写的代码将在播放器初始化完毕后执行</span></div><div class=\"line\">    <span class=\"comment\">// 这是一个最早触发的API</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"任何动作-all\"><a href=\"#任何动作-all\" class=\"headerlink\" title=\"任何动作 all\"></a>任何动作 all</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'all'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 在这里编写的代码在播放器执行任何操作后都会执行</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"开始缓冲-buffer\"><a href=\"#开始缓冲-buffer\" class=\"headerlink\" title=\"开始缓冲 buffer\"></a>开始缓冲 buffer</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 一般是第一次播放时才会触发</span></div><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'buffer'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 在这里编写的代码将在开始缓存时执行</span></div><div class=\"line\">    <span class=\"comment\">// 一般是第一次开始播放时触发</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"初始化出错-setupError\"><a href=\"#初始化出错-setupError\" class=\"headerlink\" title=\"初始化出错 setupError\"></a>初始化出错 setupError</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'setupError'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 在初始化出现错误时执行</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"实例销毁后-remove\"><a href=\"#实例销毁后-remove\" class=\"headerlink\" title=\"实例销毁后 remove\"></a>实例销毁后 remove</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'remove'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"comment\">// 当实例被销毁时执行</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"列表更新后-playlist\"><a href=\"#列表更新后-playlist\" class=\"headerlink\" title=\"列表更新后 playlist\"></a>列表更新后 playlist</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'playlist'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"comment\">// 当更新播放列表时执行</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"切换视频后-playlistItem\"><a href=\"#切换视频后-playlistItem\" class=\"headerlink\" title=\"切换视频后 playlistItem\"></a>切换视频后 playlistItem</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'playlistItem'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"comment\">// 当切换播放列表中的项时执行，如：播放下一个视频</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"列表播放完毕-playlistComplete\"><a href=\"#列表播放完毕-playlistComplete\" class=\"headerlink\" title=\"列表播放完毕 playlistComplete\"></a>列表播放完毕 playlistComplete</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'playlistComplete'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"comment\">// 当播放列表全部播放完毕时出发</span></div><div class=\"line\">    <span class=\"comment\">// Ps:当播放器设置为循环播放时，该回调方法不会执行</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h2 id=\"JWPlayer交互按钮\"><a href=\"#JWPlayer交互按钮\" class=\"headerlink\" title=\"JWPlayer交互按钮\"></a>JWPlayer交互按钮</h2><h4 id=\"增加按钮通用方法-addButton\"><a href=\"#增加按钮通用方法-addButton\" class=\"headerlink\" title=\"增加按钮通用方法 addButton()\"></a>增加按钮通用方法 addButton()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 增加一个交互按钮</span></div><div class=\"line\">player.addButton(</div><div class=\"line\">    <span class=\"comment\">// 第一个参数，用来指定添加图形按钮的图片地址</span></div><div class=\"line\">    <span class=\"string\">\"//icons.jwplayer.com/icons/white/download.svg\"</span>,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第二个参数，用来指定鼠标移到按钮上的提示文字</span></div><div class=\"line\">    <span class=\"string\">\"快点击我！\"</span>,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第三个参数，用来指定点击按钮后所执行的代码</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">       <span class=\"comment\">// code</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第四个参数，用来为按钮指定一个唯一名称，jwplayer内部使用</span></div><div class=\"line\">    <span class=\"string\">\"btn\"</span></div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<h4 id=\"删除按钮通用方法-removeButton\"><a href=\"#删除按钮通用方法-removeButton\" class=\"headerlink\" title=\"删除按钮通用方法 removeButton()\"></a>删除按钮通用方法 removeButton()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 删除一个已定义过的交互按钮</span></div><div class=\"line\">player.removeButton(<span class=\"string\">'btn'</span>); </div><div class=\"line\"><span class=\"comment\">// btn为交互按钮的标识，在定义此按钮时指定，addButton()的第四个参数</span></div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>本文档基于 <strong>JWPlayer 7.12.2</strong> 版本。</p>\n<p>文档中除了官方API外，还有部分基于官方API封装的扩展功能，扩展部分在文档中有明显标识，若使用扩展功能，需要在项目中额外引用 <strong>xy.jwplayer.js</strong> ，获取方式在本文档快速使用部分。</p>\n<h2 id=\"快速使用\"><a href=\"#快速使用\" class=\"headerlink\" title=\"快速使用\"></a>快速使用</h2><p>因文档较长，这里还准备了一份带目录的文档：<a href=\"http://xinda.site/document/published/JWPlayer%E6%92%AD%E6%94%BE%E5%99%A8%E5%BF%AB%E9%80%9F%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97(%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3\" target=\"_blank\" rel=\"external\">点击查看</a>.html)</p>\n<h3 id=\"下载文件\"><a href=\"#下载文件\" class=\"headerlink\" title=\"下载文件\"></a>下载文件</h3><p> 官方文件和扩展文件   <a href=\"http://ouh8ga02y.bkt.clouddn.com/xy-jwplayer.zip\" target=\"_blank\" rel=\"external\">点此下载</a> ，下载后解压，将整个文件夹放入项目中。</p>\n<h3 id=\"引入文件\"><a href=\"#引入文件\" class=\"headerlink\" title=\"引入文件\"></a>引入文件</h3><p>若仅使用官方API，则在页面中引入 <strong>jwplayer.js</strong>；</p>\n<p>若需要使用官方API和扩展API，则在页面引入 <strong>jwplayer.js</strong> 和 <strong>xy.jwplayer.js</strong> </p>\n<h3 id=\"写入HTML代码\"><a href=\"#写入HTML代码\" class=\"headerlink\" title=\"写入HTML代码\"></a>写入HTML代码</h3><ol>\n<li>在html中为JWPlayer准备好容器</li>\n<li>实例化一个JWPlayer对象</li>\n<li>调用setup()函数进行初始化</li>\n</ol>\n<blockquote>\n<p>快速使用完整示例：</p>\n</blockquote>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Title<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./资源路径/jwplayer.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!--如果你需要使用文档中标注为扩展的功能，则需要引用xy.jwplayer.js--&gt;</span></div><div class=\"line\">  \t<span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./资源路径/xy.jwplayer.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"player\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"undefined\">    var player = jwplayer('player');</span></div><div class=\"line\"><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"undefined\">    player.setup(&#123;</span></div><div class=\"line\"><span class=\"undefined\">      \t// 视频地址</span></div><div class=\"line\"><span class=\"undefined\">        file: \"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\", </span></div><div class=\"line\"><span class=\"undefined\">      </span></div><div class=\"line\"><span class=\"undefined\">        /*</span></div><div class=\"line\"><span class=\"undefined\">        *  Ps：示例中仅传入了视频地址(file)一个参数</span></div><div class=\"line\"><span class=\"undefined\">        *  实际可以根据需要配置许多参数</span></div><div class=\"line\"><span class=\"undefined\">        *  具体参数列表可以查看下方[初始化配置项]部分</span></div><div class=\"line\"><span class=\"undefined\">        * */</span></div><div class=\"line\"><span class=\"undefined\">        * </span></div><div class=\"line\"><span class=\"undefined\">    &#125;);</span></div><div class=\"line\"><span class=\"undefined\"> </span></div><div class=\"line\"><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"初始化选项\"><a href=\"#初始化选项\" class=\"headerlink\" title=\"初始化选项\"></a>初始化选项</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    <span class=\"comment\">// 将要播放的视频地址</span></div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>, </div><div class=\"line\">    <span class=\"comment\">// 视频播放前显示的图片</span></div><div class=\"line\">    image: <span class=\"string\">\"https://www.nvsay.com/uploads/allimg/160408/34-16040Q61P21U.jpg\"</span>,</div><div class=\"line\">    <span class=\"comment\">// 播放器加载完毕后是否自动播放视频，true自动播放，false不自动播放</span></div><div class=\"line\">    autostart:<span class=\"literal\">false</span>,</div><div class=\"line\">    <span class=\"comment\">// 设置播放器的音量，1-100之间</span></div><div class=\"line\">    volume:<span class=\"number\">100</span>,</div><div class=\"line\">    <span class=\"comment\">//播放器是否静音</span></div><div class=\"line\">    mute:<span class=\"literal\">false</span>,</div><div class=\"line\">    <span class=\"comment\">// 设置播放器的宽度</span></div><div class=\"line\">    width:<span class=\"number\">640</span>,</div><div class=\"line\">    <span class=\"comment\">// 设置播放器的高度</span></div><div class=\"line\">    height:<span class=\"number\">360</span>,</div><div class=\"line\">    <span class=\"comment\">// 播放完当前视频后，是否继续播放播放列表中的下一个视频</span></div><div class=\"line\">    repeat:<span class=\"literal\">true</span>,</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h2 id=\"JWPlayer属性\"><a href=\"#JWPlayer属性\" class=\"headerlink\" title=\"JWPlayer属性\"></a>JWPlayer属性</h2><h4 id=\"获取宽度-getWidth\"><a href=\"#获取宽度-getWidth\" class=\"headerlink\" title=\"获取宽度 getWidth()\"></a>获取宽度 getWidth()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> playerWidth = player.getWidth();</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(playerWidth); </div><div class=\"line\"><span class=\"comment\">// log -&gt; 播放器宽度</span></div></pre></td></tr></table></figure>\n<h4 id=\"获取高度-getHeight\"><a href=\"#获取高度-getHeight\" class=\"headerlink\" title=\"获取高度 getHeight()\"></a>获取高度 getHeight()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> playerHeight = player.getHeight();</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(playerHeight); </div><div class=\"line\"><span class=\"comment\">// log -&gt; 播放器高度</span></div></pre></td></tr></table></figure>\n<h4 id=\"获取播放列表-getPlaylist\"><a href=\"#获取播放列表-getPlaylist\" class=\"headerlink\" title=\"获取播放列表 getPlaylist()\"></a>获取播放列表 getPlaylist()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> playList = player.getPlaylist();</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(playList); </div><div class=\"line\"><span class=\"comment\">// 本例log -&gt; [object]</span></div><div class=\"line\"><span class=\"comment\">// 如果播放列表中有多个播放项，log -&gt; [object，object，···]</span></div></pre></td></tr></table></figure>\n<h4 id=\"获取完整DOM-getContainer\"><a href=\"#获取完整DOM-getContainer\" class=\"headerlink\" title=\"获取完整DOM getContainer()\"></a>获取完整DOM getContainer()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> playerDOM = player.getContainer();</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(playerDOM); </div><div class=\"line\"><span class=\"comment\">// log -&gt; 播放器的完整DOM</span></div></pre></td></tr></table></figure>\n<h4 id=\"获取列表索引值-getPlaylistIndex\"><a href=\"#获取列表索引值-getPlaylistIndex\" class=\"headerlink\" title=\"获取列表索引值 getPlaylistIndex()\"></a>获取列表索引值 getPlaylistIndex()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 获取当前视频在播放列表中的索引值</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> playListIndex = player.getPlaylistIndex();</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(playListIndex); </div><div class=\"line\"><span class=\"comment\">// log -&gt; 当前视频在播放列表中的索引值，如：1</span></div></pre></td></tr></table></figure>\n<h4 id=\"获取列表指定项信息-getPlaylistItem-index\"><a href=\"#获取列表指定项信息-getPlaylistItem-index\" class=\"headerlink\" title=\"获取列表指定项信息 getPlaylistItem(index)\"></a>获取列表指定项信息 getPlaylistItem(index)</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> playListItem = player.getPlaylistItem(<span class=\"number\">0</span>);</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">console</span>.log(playListItem); </div><div class=\"line\"><span class=\"comment\">// log -&gt; 播放列表中第一项的信息</span></div></pre></td></tr></table></figure>\n<h2 id=\"JWPlayer控制函数\"><a href=\"#JWPlayer控制函数\" class=\"headerlink\" title=\"JWPlayer控制函数\"></a>JWPlayer控制函数</h2><h4 id=\"播放视频-play\"><a href=\"#播放视频-play\" class=\"headerlink\" title=\"播放视频 play()\"></a>播放视频 play()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 视频将开始播放</span></div><div class=\"line\">    player.play();    </div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"暂停播放-pause\"><a href=\"#暂停播放-pause\" class=\"headerlink\" title=\"暂停播放 pause()\"></a>暂停播放 pause()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 视频将暂停</span></div><div class=\"line\">    player.pause();</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"播放下一项-playlistNext\"><a href=\"#播放下一项-playlistNext\" class=\"headerlink\" title=\"播放下一项 playlistNext()\"></a>播放下一项 playlistNext()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 视频将切换至播放列表中的下一项</span></div><div class=\"line\">    player.playlistNext();</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"播放列表指定项-playlistItem-index\"><a href=\"#播放列表指定项-playlistItem-index\" class=\"headerlink\" title=\"播放列表指定项 playlistItem(index)\"></a>播放列表指定项 playlistItem(index)</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 视频将切换到播放列表的第1项</span></div><div class=\"line\">    player.playlistItem(<span class=\"number\">0</span>);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"视频跳转指定秒-seek-position\"><a href=\"#视频跳转指定秒-seek-position\" class=\"headerlink\" title=\"视频跳转指定秒 seek(position)\"></a>视频跳转指定秒 seek(<em>position</em>)</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 视频将切换到第10秒</span></div><div class=\"line\">    player.seek(<span class=\"number\">10</span>);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"改变播放器宽高-resize-width-height\"><a href=\"#改变播放器宽高-resize-width-height\" class=\"headerlink\" title=\"改变播放器宽高 resize(width, height)\"></a>改变播放器宽高 resize(<em>width</em>, <em>height</em>)</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 播放器宽度将改为640px，高度将改为360px</span></div><div class=\"line\">    player.resize(<span class=\"number\">640</span>,<span class=\"number\">360</span>);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"更新播放列表-load\"><a href=\"#更新播放列表-load\" class=\"headerlink\" title=\"更新播放列表 load()\"></a>更新播放列表 load()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 准备好播放列表</span></div><div class=\"line\"><span class=\"keyword\">var</span> newPlayList = [</div><div class=\"line\">  &#123;</div><div class=\"line\">    file:<span class=\"string\">'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  &#123;</div><div class=\"line\">    file:<span class=\"string\">'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'</span></div><div class=\"line\">  &#125;,&#123;</div><div class=\"line\">    file:<span class=\"string\">'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'</span></div><div class=\"line\">  &#125;</div><div class=\"line\">];</div><div class=\"line\"></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 更新播放器的播放列表</span></div><div class=\"line\">    player.load(newPlayList);</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"视频前插广告-扩展-xyJWPlayerAddAddBefore-obj-url-isShut-shutImgUrl\"><a href=\"#视频前插广告-扩展-xyJWPlayerAddAddBefore-obj-url-isShut-shutImgUrl\" class=\"headerlink\" title=\"视频前插广告[扩展] xyJWPlayerAddAddBefore(obj,url,isShut,shutImgUrl)\"></a>视频前插广告[扩展] xyJWPlayerAddAddBefore(obj,url,isShut,shutImgUrl)</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"><span class=\"comment\"> * 监听视频准备完毕</span></div><div class=\"line\"><span class=\"comment\"> *   当视频准备完毕时，xyJWPlayerAddAd，在视频中插入一段广告</span></div><div class=\"line\"><span class=\"comment\"> *   调取插入广告方法，参数:</span></div><div class=\"line\"><span class=\"comment\"> *      1.播放器实例化对象</span></div><div class=\"line\"><span class=\"comment\"> *      2.广告地址</span></div><div class=\"line\"><span class=\"comment\"> *      3.广告是否允许跳过,true/false，默认为true</span></div><div class=\"line\"><span class=\"comment\"> *      4.广告图标地址，参数3为false，此参数则不会被使用</span></div><div class=\"line\"><span class=\"comment\"> * */</span></div><div class=\"line\">player.on(<span class=\"string\">'ready'</span>,<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">  </div><div class=\"line\">  xyJWPlayerAddAddBefore(</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//第一个参数，播放器实例化对象</span></div><div class=\"line\">    player,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第二个参数，广告地址</span></div><div class=\"line\">    <span class=\"string\">'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'</span>,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第三个参数，广告是否允许跳过,true/false，默认为true</span></div><div class=\"line\">    <span class=\"literal\">true</span>,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第四个参数，广告图标地址，参数3为false，此参数则不会被使用</span></div><div class=\"line\">    <span class=\"string\">'./src/skip.png'</span></div><div class=\"line\">  );</div><div class=\"line\">  </div><div class=\"line\"> &#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"立即插入广告-扩展-xyJWPlayerAddAd-obj-url-isShut-shutImgUrl\"><a href=\"#立即插入广告-扩展-xyJWPlayerAddAd-obj-url-isShut-shutImgUrl\" class=\"headerlink\" title=\"立即插入广告[扩展] xyJWPlayerAddAd(obj,url,isShut,shutImgUrl)\"></a>立即插入广告[扩展] xyJWPlayerAddAd(obj,url,isShut,shutImgUrl)</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/*</span></div><div class=\"line\"><span class=\"comment\"> * 点击按钮在视频当前位置插入一段广告</span></div><div class=\"line\"><span class=\"comment\"> *      1.播放器实例化对象</span></div><div class=\"line\"><span class=\"comment\"> *      2.广告地址</span></div><div class=\"line\"><span class=\"comment\"> *      3.广告是否允许跳过,true/false，默认为true</span></div><div class=\"line\"><span class=\"comment\"> *      4.广告图标地址，参数3为false，此参数则不会被使用</span></div><div class=\"line\"><span class=\"comment\"> * */</span></div><div class=\"line\">$(<span class=\"string\">'#btn'</span>).click(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  </div><div class=\"line\">  \txyJWPlayerAddAd(</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">//第一个参数，播放器实例化对象</span></div><div class=\"line\">    player,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第二个参数，广告地址</span></div><div class=\"line\">    <span class=\"string\">'//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4'</span>,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第三个参数，广告是否允许跳过,true/false，默认为true</span></div><div class=\"line\">    <span class=\"literal\">true</span>,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第四个参数，广告图标地址，参数3为false，此参数则不会被使用</span></div><div class=\"line\">    <span class=\"string\">'./src/skip.png'</span></div><div class=\"line\">  );</div><div class=\"line\">  </div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<h4 id=\"删除实例-remove\"><a href=\"#删除实例-remove\" class=\"headerlink\" title=\"删除实例 remove()\"></a>删除实例 remove()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 调用后实例被销毁</span></div><div class=\"line\">player.remove();</div></pre></td></tr></table></figure>\n<h2 id=\"JWPlayer回调\"><a href=\"#JWPlayer回调\" class=\"headerlink\" title=\"JWPlayer回调\"></a>JWPlayer回调</h2><h4 id=\"初始化完成-ready\"><a href=\"#初始化完成-ready\" class=\"headerlink\" title=\"初始化完成 ready\"></a>初始化完成 ready</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'ready'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 在这里编写的代码将在播放器初始化完毕后执行</span></div><div class=\"line\">    <span class=\"comment\">// 这是一个最早触发的API</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"任何动作-all\"><a href=\"#任何动作-all\" class=\"headerlink\" title=\"任何动作 all\"></a>任何动作 all</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'all'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 在这里编写的代码在播放器执行任何操作后都会执行</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"开始缓冲-buffer\"><a href=\"#开始缓冲-buffer\" class=\"headerlink\" title=\"开始缓冲 buffer\"></a>开始缓冲 buffer</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 一般是第一次播放时才会触发</span></div><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'buffer'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 在这里编写的代码将在开始缓存时执行</span></div><div class=\"line\">    <span class=\"comment\">// 一般是第一次开始播放时触发</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"初始化出错-setupError\"><a href=\"#初始化出错-setupError\" class=\"headerlink\" title=\"初始化出错 setupError\"></a>初始化出错 setupError</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'setupError'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">// 在初始化出现错误时执行</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"实例销毁后-remove\"><a href=\"#实例销毁后-remove\" class=\"headerlink\" title=\"实例销毁后 remove\"></a>实例销毁后 remove</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'remove'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"comment\">// 当实例被销毁时执行</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"列表更新后-playlist\"><a href=\"#列表更新后-playlist\" class=\"headerlink\" title=\"列表更新后 playlist\"></a>列表更新后 playlist</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'playlist'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"comment\">// 当更新播放列表时执行</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"切换视频后-playlistItem\"><a href=\"#切换视频后-playlistItem\" class=\"headerlink\" title=\"切换视频后 playlistItem\"></a>切换视频后 playlistItem</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'playlistItem'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"comment\">// 当切换播放列表中的项时执行，如：播放下一个视频</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h4 id=\"列表播放完毕-playlistComplete\"><a href=\"#列表播放完毕-playlistComplete\" class=\"headerlink\" title=\"列表播放完毕 playlistComplete\"></a>列表播放完毕 playlistComplete</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.on(<span class=\"string\">'playlistComplete'</span>,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">\t<span class=\"comment\">// 当播放列表全部播放完毕时出发</span></div><div class=\"line\">    <span class=\"comment\">// Ps:当播放器设置为循环播放时，该回调方法不会执行</span></div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<h2 id=\"JWPlayer交互按钮\"><a href=\"#JWPlayer交互按钮\" class=\"headerlink\" title=\"JWPlayer交互按钮\"></a>JWPlayer交互按钮</h2><h4 id=\"增加按钮通用方法-addButton\"><a href=\"#增加按钮通用方法-addButton\" class=\"headerlink\" title=\"增加按钮通用方法 addButton()\"></a>增加按钮通用方法 addButton()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 增加一个交互按钮</span></div><div class=\"line\">player.addButton(</div><div class=\"line\">    <span class=\"comment\">// 第一个参数，用来指定添加图形按钮的图片地址</span></div><div class=\"line\">    <span class=\"string\">\"//icons.jwplayer.com/icons/white/download.svg\"</span>,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第二个参数，用来指定鼠标移到按钮上的提示文字</span></div><div class=\"line\">    <span class=\"string\">\"快点击我！\"</span>,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第三个参数，用来指定点击按钮后所执行的代码</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">       <span class=\"comment\">// code</span></div><div class=\"line\">    &#125;,</div><div class=\"line\">    </div><div class=\"line\">    <span class=\"comment\">// 第四个参数，用来为按钮指定一个唯一名称，jwplayer内部使用</span></div><div class=\"line\">    <span class=\"string\">\"btn\"</span></div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<h4 id=\"删除按钮通用方法-removeButton\"><a href=\"#删除按钮通用方法-removeButton\" class=\"headerlink\" title=\"删除按钮通用方法 removeButton()\"></a>删除按钮通用方法 removeButton()</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 代码示例</span></div><div class=\"line\"><span class=\"keyword\">var</span> player = jwplayer(<span class=\"string\">'player'</span>);</div><div class=\"line\"></div><div class=\"line\">player.setup(&#123;</div><div class=\"line\">    file: <span class=\"string\">\"//content.jwplatform.com/videos/xJ7Wcodt-cIp6U8lV.mp4\"</span>,</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 删除一个已定义过的交互按钮</span></div><div class=\"line\">player.removeButton(<span class=\"string\">'btn'</span>); </div><div class=\"line\"><span class=\"comment\">// btn为交互按钮的标识，在定义此按钮时指定，addButton()的第四个参数</span></div></pre></td></tr></table></figure>\n"},{"title":"《图解HTTP》学习笔记(1) - 基础知识","作者":"信达","date":"2017-11-23T03:50:10.000Z","_content":"\n\n当查看一个网站时，在浏览器中输入一个URL后，客户端(比如浏览器)会从Web服务端获取资源，Web客户端到服务器端的一系列运作流程，遵循一种名为HTTP的协议(HyperText Transfer Protocol)，也叫超文本传输协议。\n\n<!--more-->\n\n## HTTP的发展历史\n#### 1989年3月HTTP诞生\n最初设想的基本理念是：借助多文档之间相互关联形成的超文本，连成可相互参阅的WWW（world wide web,万维网）\n\n目前WWW的构建技术有3项，分别为：\n\n1. 把SGML(标准通用标记语言)作为页面的文本标记语言的HTML\n2. 作为文档传递协议的HTTP\n3. 指定文档所在地址的URL(Uniform Resource Locator，统一资源定位符)\n\n#### Web成长时代\n- 1990年11月，CERN成功研发世界上第一台Web服务器和Web浏览器\n- 1992年9月，日本第一个网站的主页上线\n- 1994年12月，网景公司发布了Netscape Navigator 1.0\n- 1995年，微软发布IE1.0和IE2.0\n\n#### HTTP协议的更新\n- 1990年问世，没有被确立为正式的标准，将其称作HTTP/0.9,意思是HTTP/1.0之前所有版本\n- 1996年5月，被正式确定为标准，版本命名为HTTP/1.0，并记载于RFC1945，该协议至今仍被广泛使用在服务器端\n- 1997年1月，公布了HTTP/1.1，是目前主流的协议版本，当初的标准是RFC2068，之后发布的修订版RFC2616就是当前的最新版本\n- 目前新一代的HTTP/2.0正在制定中，想要达到较高的覆盖了，还需要不少时间\n\n## 网络基础 TCP/IP\n#### TCP/IP协议族\n在计算机与网络设备相互通信的过程中，双方必须基于相同的方法。在不同的硬件、操作系统之间的通信，需要一种规则，而我们就把这种规则称之为协议。在各个环节中，都有不同的协议，我们可以把和互联网相关联的协议集合，称之为TCP/IP协议族。\n#### TCP/IP的分层管理\nTCP/IP族中最重要的一点就是分层，分层的好处是当某个地方需要修改时，不需要把整个协议都替换掉，可以只将变动的层替换掉就可以了，只要定义好各个层之间的接口，每个层的内部就可以自由的进行设计和调整了。\n\n另外分成之后每个层只需要考虑好自己部分的事情，会变得更加清晰和简单。\n\nTCP/IP协议族分层入下：\n\n**应用层**\n应用层决定了向用户提供应用时通信的服务。\nTCP/IP协议族中预存了各类通用的应用服务：FTP(文件传输协议)、DNS(域名系统)\nHTTP协议也处于该层\n\n**传输层**\n传输层对上层应用层，提供两台网络连接中的计算机之间的数据传输。\n传输层中有两个性质不同的协议：TCP(传输控制协议)、UDP(用户数据报协议)\n\n**网络层(又名网络互联层)**\n网络层用来处理在网络上流动的数据包，数据包是网络传输的最小数据单位，该层规定了通过怎样的路径到达对方计算机，并把数据包传送对方。\n\n**链路层**      \n该层用来处理链接网络的硬件部分，包括控制操作系统、硬件的设备驱动、NIC(网络适配器，即网卡)，以及光纤等物理可见部分，硬件上的范畴均在链路层的作用范围之内。               \n\n#### TCP/IP通信传输流\n\n通过TCP/IP进行网络通讯时，会通过分层顺序与对方进行通讯，发送端会由应用层从上往下走，接收端会链路端从下往上走。\n\n发送端：应用层->传输层->网络层->链路层\n\n接收端：链路层->网络层->传输层->应用层\n\n#### TCP协议、IP协议及DNS介绍\n\n**负责传输的IP协议**\nIP协议属于网络层，几乎所有使用网络的系统都会用到IP协议，IP协议的作用是把各数据包传送给对方，传送的两个重要条件是IP地址和MAC地址。\n\nIP地址指明了节点被分配到的地址，MAC地址是指网卡所属的固定地址，IP地址和MAC地址可以进行配对，IP地址可换，但MAC地址一般不会更改。\n\n网络通信借助MAC地址不断所搜索下一站的中转设备，过程中会用到ARP协议，ARP协议是一种用以解析的协议，根据IP能够反查出MAC地址\n\n**确保可靠性的TCP协议**\nTCP位于传输层，提供可靠的字节流服务，字节流服务是为了方便传输，将大块数据分割成以报文为单位的数据包进行管理，TCP协议能够确认数据最终是否完整的送达对方。\n\nTCP协议采用了3次握手策略，第一次发送端发送携带SYN标志的数据包给接收方，第二次接收方回传带有SYN/ACK标志的数据包，第三次发送端发送带有ACK标志的数据包，结束握手。握手过程中任何一个环节中断，TCP协议会以同样方式再次发送相同的数据包。\n\nTCP协议还有其他的手段来保证通信的可靠性。 \n\n#### 负责域名解析的DNS服务\n\nDNS服务位于应用层，他负责提供域名到IP地址之间的解析服务。\n\n#### 各种协议和HTTP协议的关系\n\n当我们浏览一个页面时，我们在浏览器中输入一个域名，首先DNS服务会将域名解析成对应IP，HTTP生成针对目标web服务器的报文，TCP将请求报文分割成为报文段，并可靠的传给对方，IP协议一遍传输一遍查询下一站的地址，不断进行传递，最终到达目标web服务器，TCP协议将报文段重组回HTTP协议报文，HTTP协议对web服务器请求的内容进行处理，此时单向的请求完成，最后本次请求的返回也会通过TCP/IP协议回传给用户。   \n\n#### URI和URL\n\nURI为统一资源标识符，URL为统一资源定位符，平时访问网站输入的域名就是URL。\n\nURI表示某一个互联网资源，而URL表示某一互联网资源的地址，可见URL是URI的子集。\n\nURI的格式\n\n> http://user:pass@www.example.js:80/dir/index.html?uid=1#ch1\n\n其中**http:**表示获取资源时使用的协议类型，**user:pass**表示登录信息(认证)，**www.example.js**表示服务器地址，**:80**表示服务器端口号，**/dir/index.html**表示所访问的文件路径，**?uid=1**表示查询字符串(参数)，**#ch1**表示片段标识符。\n\n\n\n\n","source":"_posts/《图解HTTP》学习笔记(1) - 基础知识.md","raw":"---\ntitle: 《图解HTTP》学习笔记(1) - 基础知识\ncategories: 技术笔记\n作者: 信达\ndate: 2017-11-23 11:50:10\ntags: HTTP,TCP/IP\n---\n\n\n当查看一个网站时，在浏览器中输入一个URL后，客户端(比如浏览器)会从Web服务端获取资源，Web客户端到服务器端的一系列运作流程，遵循一种名为HTTP的协议(HyperText Transfer Protocol)，也叫超文本传输协议。\n\n<!--more-->\n\n## HTTP的发展历史\n#### 1989年3月HTTP诞生\n最初设想的基本理念是：借助多文档之间相互关联形成的超文本，连成可相互参阅的WWW（world wide web,万维网）\n\n目前WWW的构建技术有3项，分别为：\n\n1. 把SGML(标准通用标记语言)作为页面的文本标记语言的HTML\n2. 作为文档传递协议的HTTP\n3. 指定文档所在地址的URL(Uniform Resource Locator，统一资源定位符)\n\n#### Web成长时代\n- 1990年11月，CERN成功研发世界上第一台Web服务器和Web浏览器\n- 1992年9月，日本第一个网站的主页上线\n- 1994年12月，网景公司发布了Netscape Navigator 1.0\n- 1995年，微软发布IE1.0和IE2.0\n\n#### HTTP协议的更新\n- 1990年问世，没有被确立为正式的标准，将其称作HTTP/0.9,意思是HTTP/1.0之前所有版本\n- 1996年5月，被正式确定为标准，版本命名为HTTP/1.0，并记载于RFC1945，该协议至今仍被广泛使用在服务器端\n- 1997年1月，公布了HTTP/1.1，是目前主流的协议版本，当初的标准是RFC2068，之后发布的修订版RFC2616就是当前的最新版本\n- 目前新一代的HTTP/2.0正在制定中，想要达到较高的覆盖了，还需要不少时间\n\n## 网络基础 TCP/IP\n#### TCP/IP协议族\n在计算机与网络设备相互通信的过程中，双方必须基于相同的方法。在不同的硬件、操作系统之间的通信，需要一种规则，而我们就把这种规则称之为协议。在各个环节中，都有不同的协议，我们可以把和互联网相关联的协议集合，称之为TCP/IP协议族。\n#### TCP/IP的分层管理\nTCP/IP族中最重要的一点就是分层，分层的好处是当某个地方需要修改时，不需要把整个协议都替换掉，可以只将变动的层替换掉就可以了，只要定义好各个层之间的接口，每个层的内部就可以自由的进行设计和调整了。\n\n另外分成之后每个层只需要考虑好自己部分的事情，会变得更加清晰和简单。\n\nTCP/IP协议族分层入下：\n\n**应用层**\n应用层决定了向用户提供应用时通信的服务。\nTCP/IP协议族中预存了各类通用的应用服务：FTP(文件传输协议)、DNS(域名系统)\nHTTP协议也处于该层\n\n**传输层**\n传输层对上层应用层，提供两台网络连接中的计算机之间的数据传输。\n传输层中有两个性质不同的协议：TCP(传输控制协议)、UDP(用户数据报协议)\n\n**网络层(又名网络互联层)**\n网络层用来处理在网络上流动的数据包，数据包是网络传输的最小数据单位，该层规定了通过怎样的路径到达对方计算机，并把数据包传送对方。\n\n**链路层**      \n该层用来处理链接网络的硬件部分，包括控制操作系统、硬件的设备驱动、NIC(网络适配器，即网卡)，以及光纤等物理可见部分，硬件上的范畴均在链路层的作用范围之内。               \n\n#### TCP/IP通信传输流\n\n通过TCP/IP进行网络通讯时，会通过分层顺序与对方进行通讯，发送端会由应用层从上往下走，接收端会链路端从下往上走。\n\n发送端：应用层->传输层->网络层->链路层\n\n接收端：链路层->网络层->传输层->应用层\n\n#### TCP协议、IP协议及DNS介绍\n\n**负责传输的IP协议**\nIP协议属于网络层，几乎所有使用网络的系统都会用到IP协议，IP协议的作用是把各数据包传送给对方，传送的两个重要条件是IP地址和MAC地址。\n\nIP地址指明了节点被分配到的地址，MAC地址是指网卡所属的固定地址，IP地址和MAC地址可以进行配对，IP地址可换，但MAC地址一般不会更改。\n\n网络通信借助MAC地址不断所搜索下一站的中转设备，过程中会用到ARP协议，ARP协议是一种用以解析的协议，根据IP能够反查出MAC地址\n\n**确保可靠性的TCP协议**\nTCP位于传输层，提供可靠的字节流服务，字节流服务是为了方便传输，将大块数据分割成以报文为单位的数据包进行管理，TCP协议能够确认数据最终是否完整的送达对方。\n\nTCP协议采用了3次握手策略，第一次发送端发送携带SYN标志的数据包给接收方，第二次接收方回传带有SYN/ACK标志的数据包，第三次发送端发送带有ACK标志的数据包，结束握手。握手过程中任何一个环节中断，TCP协议会以同样方式再次发送相同的数据包。\n\nTCP协议还有其他的手段来保证通信的可靠性。 \n\n#### 负责域名解析的DNS服务\n\nDNS服务位于应用层，他负责提供域名到IP地址之间的解析服务。\n\n#### 各种协议和HTTP协议的关系\n\n当我们浏览一个页面时，我们在浏览器中输入一个域名，首先DNS服务会将域名解析成对应IP，HTTP生成针对目标web服务器的报文，TCP将请求报文分割成为报文段，并可靠的传给对方，IP协议一遍传输一遍查询下一站的地址，不断进行传递，最终到达目标web服务器，TCP协议将报文段重组回HTTP协议报文，HTTP协议对web服务器请求的内容进行处理，此时单向的请求完成，最后本次请求的返回也会通过TCP/IP协议回传给用户。   \n\n#### URI和URL\n\nURI为统一资源标识符，URL为统一资源定位符，平时访问网站输入的域名就是URL。\n\nURI表示某一个互联网资源，而URL表示某一互联网资源的地址，可见URL是URI的子集。\n\nURI的格式\n\n> http://user:pass@www.example.js:80/dir/index.html?uid=1#ch1\n\n其中**http:**表示获取资源时使用的协议类型，**user:pass**表示登录信息(认证)，**www.example.js**表示服务器地址，**:80**表示服务器端口号，**/dir/index.html**表示所访问的文件路径，**?uid=1**表示查询字符串(参数)，**#ch1**表示片段标识符。\n\n\n\n\n","slug":"《图解HTTP》学习笔记-1-基础知识","published":1,"updated":"2017-11-23T04:27:12.000Z","_id":"cjabyxuq00004myolezoq1rcs","comments":1,"layout":"post","photos":[],"link":"","content":"<p>当查看一个网站时，在浏览器中输入一个URL后，客户端(比如浏览器)会从Web服务端获取资源，Web客户端到服务器端的一系列运作流程，遵循一种名为HTTP的协议(HyperText Transfer Protocol)，也叫超文本传输协议。</p>\n<a id=\"more\"></a>\n<h2 id=\"HTTP的发展历史\"><a href=\"#HTTP的发展历史\" class=\"headerlink\" title=\"HTTP的发展历史\"></a>HTTP的发展历史</h2><h4 id=\"1989年3月HTTP诞生\"><a href=\"#1989年3月HTTP诞生\" class=\"headerlink\" title=\"1989年3月HTTP诞生\"></a>1989年3月HTTP诞生</h4><p>最初设想的基本理念是：借助多文档之间相互关联形成的超文本，连成可相互参阅的WWW（world wide web,万维网）</p>\n<p>目前WWW的构建技术有3项，分别为：</p>\n<ol>\n<li>把SGML(标准通用标记语言)作为页面的文本标记语言的HTML</li>\n<li>作为文档传递协议的HTTP</li>\n<li>指定文档所在地址的URL(Uniform Resource Locator，统一资源定位符)</li>\n</ol>\n<h4 id=\"Web成长时代\"><a href=\"#Web成长时代\" class=\"headerlink\" title=\"Web成长时代\"></a>Web成长时代</h4><ul>\n<li>1990年11月，CERN成功研发世界上第一台Web服务器和Web浏览器</li>\n<li>1992年9月，日本第一个网站的主页上线</li>\n<li>1994年12月，网景公司发布了Netscape Navigator 1.0</li>\n<li>1995年，微软发布IE1.0和IE2.0</li>\n</ul>\n<h4 id=\"HTTP协议的更新\"><a href=\"#HTTP协议的更新\" class=\"headerlink\" title=\"HTTP协议的更新\"></a>HTTP协议的更新</h4><ul>\n<li>1990年问世，没有被确立为正式的标准，将其称作HTTP/0.9,意思是HTTP/1.0之前所有版本</li>\n<li>1996年5月，被正式确定为标准，版本命名为HTTP/1.0，并记载于RFC1945，该协议至今仍被广泛使用在服务器端</li>\n<li>1997年1月，公布了HTTP/1.1，是目前主流的协议版本，当初的标准是RFC2068，之后发布的修订版RFC2616就是当前的最新版本</li>\n<li>目前新一代的HTTP/2.0正在制定中，想要达到较高的覆盖了，还需要不少时间</li>\n</ul>\n<h2 id=\"网络基础-TCP-IP\"><a href=\"#网络基础-TCP-IP\" class=\"headerlink\" title=\"网络基础 TCP/IP\"></a>网络基础 TCP/IP</h2><h4 id=\"TCP-IP协议族\"><a href=\"#TCP-IP协议族\" class=\"headerlink\" title=\"TCP/IP协议族\"></a>TCP/IP协议族</h4><p>在计算机与网络设备相互通信的过程中，双方必须基于相同的方法。在不同的硬件、操作系统之间的通信，需要一种规则，而我们就把这种规则称之为协议。在各个环节中，都有不同的协议，我们可以把和互联网相关联的协议集合，称之为TCP/IP协议族。</p>\n<h4 id=\"TCP-IP的分层管理\"><a href=\"#TCP-IP的分层管理\" class=\"headerlink\" title=\"TCP/IP的分层管理\"></a>TCP/IP的分层管理</h4><p>TCP/IP族中最重要的一点就是分层，分层的好处是当某个地方需要修改时，不需要把整个协议都替换掉，可以只将变动的层替换掉就可以了，只要定义好各个层之间的接口，每个层的内部就可以自由的进行设计和调整了。</p>\n<p>另外分成之后每个层只需要考虑好自己部分的事情，会变得更加清晰和简单。</p>\n<p>TCP/IP协议族分层入下：</p>\n<p><strong>应用层</strong><br>应用层决定了向用户提供应用时通信的服务。<br>TCP/IP协议族中预存了各类通用的应用服务：FTP(文件传输协议)、DNS(域名系统)<br>HTTP协议也处于该层</p>\n<p><strong>传输层</strong><br>传输层对上层应用层，提供两台网络连接中的计算机之间的数据传输。<br>传输层中有两个性质不同的协议：TCP(传输控制协议)、UDP(用户数据报协议)</p>\n<p><strong>网络层(又名网络互联层)</strong><br>网络层用来处理在网络上流动的数据包，数据包是网络传输的最小数据单位，该层规定了通过怎样的路径到达对方计算机，并把数据包传送对方。</p>\n<p><strong>链路层</strong><br>该层用来处理链接网络的硬件部分，包括控制操作系统、硬件的设备驱动、NIC(网络适配器，即网卡)，以及光纤等物理可见部分，硬件上的范畴均在链路层的作用范围之内。               </p>\n<h4 id=\"TCP-IP通信传输流\"><a href=\"#TCP-IP通信传输流\" class=\"headerlink\" title=\"TCP/IP通信传输流\"></a>TCP/IP通信传输流</h4><p>通过TCP/IP进行网络通讯时，会通过分层顺序与对方进行通讯，发送端会由应用层从上往下走，接收端会链路端从下往上走。</p>\n<p>发送端：应用层-&gt;传输层-&gt;网络层-&gt;链路层</p>\n<p>接收端：链路层-&gt;网络层-&gt;传输层-&gt;应用层</p>\n<h4 id=\"TCP协议、IP协议及DNS介绍\"><a href=\"#TCP协议、IP协议及DNS介绍\" class=\"headerlink\" title=\"TCP协议、IP协议及DNS介绍\"></a>TCP协议、IP协议及DNS介绍</h4><p><strong>负责传输的IP协议</strong><br>IP协议属于网络层，几乎所有使用网络的系统都会用到IP协议，IP协议的作用是把各数据包传送给对方，传送的两个重要条件是IP地址和MAC地址。</p>\n<p>IP地址指明了节点被分配到的地址，MAC地址是指网卡所属的固定地址，IP地址和MAC地址可以进行配对，IP地址可换，但MAC地址一般不会更改。</p>\n<p>网络通信借助MAC地址不断所搜索下一站的中转设备，过程中会用到ARP协议，ARP协议是一种用以解析的协议，根据IP能够反查出MAC地址</p>\n<p><strong>确保可靠性的TCP协议</strong><br>TCP位于传输层，提供可靠的字节流服务，字节流服务是为了方便传输，将大块数据分割成以报文为单位的数据包进行管理，TCP协议能够确认数据最终是否完整的送达对方。</p>\n<p>TCP协议采用了3次握手策略，第一次发送端发送携带SYN标志的数据包给接收方，第二次接收方回传带有SYN/ACK标志的数据包，第三次发送端发送带有ACK标志的数据包，结束握手。握手过程中任何一个环节中断，TCP协议会以同样方式再次发送相同的数据包。</p>\n<p>TCP协议还有其他的手段来保证通信的可靠性。 </p>\n<h4 id=\"负责域名解析的DNS服务\"><a href=\"#负责域名解析的DNS服务\" class=\"headerlink\" title=\"负责域名解析的DNS服务\"></a>负责域名解析的DNS服务</h4><p>DNS服务位于应用层，他负责提供域名到IP地址之间的解析服务。</p>\n<h4 id=\"各种协议和HTTP协议的关系\"><a href=\"#各种协议和HTTP协议的关系\" class=\"headerlink\" title=\"各种协议和HTTP协议的关系\"></a>各种协议和HTTP协议的关系</h4><p>当我们浏览一个页面时，我们在浏览器中输入一个域名，首先DNS服务会将域名解析成对应IP，HTTP生成针对目标web服务器的报文，TCP将请求报文分割成为报文段，并可靠的传给对方，IP协议一遍传输一遍查询下一站的地址，不断进行传递，最终到达目标web服务器，TCP协议将报文段重组回HTTP协议报文，HTTP协议对web服务器请求的内容进行处理，此时单向的请求完成，最后本次请求的返回也会通过TCP/IP协议回传给用户。   </p>\n<h4 id=\"URI和URL\"><a href=\"#URI和URL\" class=\"headerlink\" title=\"URI和URL\"></a>URI和URL</h4><p>URI为统一资源标识符，URL为统一资源定位符，平时访问网站输入的域名就是URL。</p>\n<p>URI表示某一个互联网资源，而URL表示某一互联网资源的地址，可见URL是URI的子集。</p>\n<p>URI的格式</p>\n<blockquote>\n<p><a href=\"http://user:pass@www.example.js:80/dir/index.html?uid=1#ch1\" target=\"_blank\" rel=\"external\">http://user:pass@www.example.js:80/dir/index.html?uid=1#ch1</a></p>\n</blockquote>\n<p>其中<strong>http:</strong>表示获取资源时使用的协议类型，<strong>user:pass</strong>表示登录信息(认证)，<strong>www.example.js</strong>表示服务器地址，<strong>:80</strong>表示服务器端口号，<strong>/dir/index.html</strong>表示所访问的文件路径，<strong>?uid=1</strong>表示查询字符串(参数)，<strong>#ch1</strong>表示片段标识符。</p>\n","site":{"data":{}},"excerpt":"<p>当查看一个网站时，在浏览器中输入一个URL后，客户端(比如浏览器)会从Web服务端获取资源，Web客户端到服务器端的一系列运作流程，遵循一种名为HTTP的协议(HyperText Transfer Protocol)，也叫超文本传输协议。</p>","more":"<h2 id=\"HTTP的发展历史\"><a href=\"#HTTP的发展历史\" class=\"headerlink\" title=\"HTTP的发展历史\"></a>HTTP的发展历史</h2><h4 id=\"1989年3月HTTP诞生\"><a href=\"#1989年3月HTTP诞生\" class=\"headerlink\" title=\"1989年3月HTTP诞生\"></a>1989年3月HTTP诞生</h4><p>最初设想的基本理念是：借助多文档之间相互关联形成的超文本，连成可相互参阅的WWW（world wide web,万维网）</p>\n<p>目前WWW的构建技术有3项，分别为：</p>\n<ol>\n<li>把SGML(标准通用标记语言)作为页面的文本标记语言的HTML</li>\n<li>作为文档传递协议的HTTP</li>\n<li>指定文档所在地址的URL(Uniform Resource Locator，统一资源定位符)</li>\n</ol>\n<h4 id=\"Web成长时代\"><a href=\"#Web成长时代\" class=\"headerlink\" title=\"Web成长时代\"></a>Web成长时代</h4><ul>\n<li>1990年11月，CERN成功研发世界上第一台Web服务器和Web浏览器</li>\n<li>1992年9月，日本第一个网站的主页上线</li>\n<li>1994年12月，网景公司发布了Netscape Navigator 1.0</li>\n<li>1995年，微软发布IE1.0和IE2.0</li>\n</ul>\n<h4 id=\"HTTP协议的更新\"><a href=\"#HTTP协议的更新\" class=\"headerlink\" title=\"HTTP协议的更新\"></a>HTTP协议的更新</h4><ul>\n<li>1990年问世，没有被确立为正式的标准，将其称作HTTP/0.9,意思是HTTP/1.0之前所有版本</li>\n<li>1996年5月，被正式确定为标准，版本命名为HTTP/1.0，并记载于RFC1945，该协议至今仍被广泛使用在服务器端</li>\n<li>1997年1月，公布了HTTP/1.1，是目前主流的协议版本，当初的标准是RFC2068，之后发布的修订版RFC2616就是当前的最新版本</li>\n<li>目前新一代的HTTP/2.0正在制定中，想要达到较高的覆盖了，还需要不少时间</li>\n</ul>\n<h2 id=\"网络基础-TCP-IP\"><a href=\"#网络基础-TCP-IP\" class=\"headerlink\" title=\"网络基础 TCP/IP\"></a>网络基础 TCP/IP</h2><h4 id=\"TCP-IP协议族\"><a href=\"#TCP-IP协议族\" class=\"headerlink\" title=\"TCP/IP协议族\"></a>TCP/IP协议族</h4><p>在计算机与网络设备相互通信的过程中，双方必须基于相同的方法。在不同的硬件、操作系统之间的通信，需要一种规则，而我们就把这种规则称之为协议。在各个环节中，都有不同的协议，我们可以把和互联网相关联的协议集合，称之为TCP/IP协议族。</p>\n<h4 id=\"TCP-IP的分层管理\"><a href=\"#TCP-IP的分层管理\" class=\"headerlink\" title=\"TCP/IP的分层管理\"></a>TCP/IP的分层管理</h4><p>TCP/IP族中最重要的一点就是分层，分层的好处是当某个地方需要修改时，不需要把整个协议都替换掉，可以只将变动的层替换掉就可以了，只要定义好各个层之间的接口，每个层的内部就可以自由的进行设计和调整了。</p>\n<p>另外分成之后每个层只需要考虑好自己部分的事情，会变得更加清晰和简单。</p>\n<p>TCP/IP协议族分层入下：</p>\n<p><strong>应用层</strong><br>应用层决定了向用户提供应用时通信的服务。<br>TCP/IP协议族中预存了各类通用的应用服务：FTP(文件传输协议)、DNS(域名系统)<br>HTTP协议也处于该层</p>\n<p><strong>传输层</strong><br>传输层对上层应用层，提供两台网络连接中的计算机之间的数据传输。<br>传输层中有两个性质不同的协议：TCP(传输控制协议)、UDP(用户数据报协议)</p>\n<p><strong>网络层(又名网络互联层)</strong><br>网络层用来处理在网络上流动的数据包，数据包是网络传输的最小数据单位，该层规定了通过怎样的路径到达对方计算机，并把数据包传送对方。</p>\n<p><strong>链路层</strong><br>该层用来处理链接网络的硬件部分，包括控制操作系统、硬件的设备驱动、NIC(网络适配器，即网卡)，以及光纤等物理可见部分，硬件上的范畴均在链路层的作用范围之内。               </p>\n<h4 id=\"TCP-IP通信传输流\"><a href=\"#TCP-IP通信传输流\" class=\"headerlink\" title=\"TCP/IP通信传输流\"></a>TCP/IP通信传输流</h4><p>通过TCP/IP进行网络通讯时，会通过分层顺序与对方进行通讯，发送端会由应用层从上往下走，接收端会链路端从下往上走。</p>\n<p>发送端：应用层-&gt;传输层-&gt;网络层-&gt;链路层</p>\n<p>接收端：链路层-&gt;网络层-&gt;传输层-&gt;应用层</p>\n<h4 id=\"TCP协议、IP协议及DNS介绍\"><a href=\"#TCP协议、IP协议及DNS介绍\" class=\"headerlink\" title=\"TCP协议、IP协议及DNS介绍\"></a>TCP协议、IP协议及DNS介绍</h4><p><strong>负责传输的IP协议</strong><br>IP协议属于网络层，几乎所有使用网络的系统都会用到IP协议，IP协议的作用是把各数据包传送给对方，传送的两个重要条件是IP地址和MAC地址。</p>\n<p>IP地址指明了节点被分配到的地址，MAC地址是指网卡所属的固定地址，IP地址和MAC地址可以进行配对，IP地址可换，但MAC地址一般不会更改。</p>\n<p>网络通信借助MAC地址不断所搜索下一站的中转设备，过程中会用到ARP协议，ARP协议是一种用以解析的协议，根据IP能够反查出MAC地址</p>\n<p><strong>确保可靠性的TCP协议</strong><br>TCP位于传输层，提供可靠的字节流服务，字节流服务是为了方便传输，将大块数据分割成以报文为单位的数据包进行管理，TCP协议能够确认数据最终是否完整的送达对方。</p>\n<p>TCP协议采用了3次握手策略，第一次发送端发送携带SYN标志的数据包给接收方，第二次接收方回传带有SYN/ACK标志的数据包，第三次发送端发送带有ACK标志的数据包，结束握手。握手过程中任何一个环节中断，TCP协议会以同样方式再次发送相同的数据包。</p>\n<p>TCP协议还有其他的手段来保证通信的可靠性。 </p>\n<h4 id=\"负责域名解析的DNS服务\"><a href=\"#负责域名解析的DNS服务\" class=\"headerlink\" title=\"负责域名解析的DNS服务\"></a>负责域名解析的DNS服务</h4><p>DNS服务位于应用层，他负责提供域名到IP地址之间的解析服务。</p>\n<h4 id=\"各种协议和HTTP协议的关系\"><a href=\"#各种协议和HTTP协议的关系\" class=\"headerlink\" title=\"各种协议和HTTP协议的关系\"></a>各种协议和HTTP协议的关系</h4><p>当我们浏览一个页面时，我们在浏览器中输入一个域名，首先DNS服务会将域名解析成对应IP，HTTP生成针对目标web服务器的报文，TCP将请求报文分割成为报文段，并可靠的传给对方，IP协议一遍传输一遍查询下一站的地址，不断进行传递，最终到达目标web服务器，TCP协议将报文段重组回HTTP协议报文，HTTP协议对web服务器请求的内容进行处理，此时单向的请求完成，最后本次请求的返回也会通过TCP/IP协议回传给用户。   </p>\n<h4 id=\"URI和URL\"><a href=\"#URI和URL\" class=\"headerlink\" title=\"URI和URL\"></a>URI和URL</h4><p>URI为统一资源标识符，URL为统一资源定位符，平时访问网站输入的域名就是URL。</p>\n<p>URI表示某一个互联网资源，而URL表示某一互联网资源的地址，可见URL是URI的子集。</p>\n<p>URI的格式</p>\n<blockquote>\n<p><a href=\"http://user:pass@www.example.js:80/dir/index.html?uid=1#ch1\" target=\"_blank\" rel=\"external\">http://user:pass@www.example.js:80/dir/index.html?uid=1#ch1</a></p>\n</blockquote>\n<p>其中<strong>http:</strong>表示获取资源时使用的协议类型，<strong>user:pass</strong>表示登录信息(认证)，<strong>www.example.js</strong>表示服务器地址，<strong>:80</strong>表示服务器端口号，<strong>/dir/index.html</strong>表示所访问的文件路径，<strong>?uid=1</strong>表示查询字符串(参数)，<strong>#ch1</strong>表示片段标识符。</p>"},{"_content":"\n## HTTP协议用于客户端和服务端之间的通信\n\n应用HTTP协议时，必定一方为客户端，另一方为服务端。\n<!--more-->\n**HTTP协议支持的方法**\n\n\n| 方法      | 作用          | 支持的HTTP协议版本 |\n| ------- | ----------- | ----------- |\n| GET     | 获取资源        | 1.0、1.1     |\n| POST    | 传输实体主体      | 1.0、1.1     |\n| PUT     | 传输文件        | 1.0、1.1     |\n| HEAD    | 获得报文首部      | 1.0、1.1     |\n| DETELE  | 删除文件        | 1.0、1.1     |\n| OPTIONS | 询问支持的方法     | 1.1         |\n| TRACE   | 追踪路径        | 1.1         |\n| CONNECT | 要求用隧道协议链接代理 | 1.1         |\n| LINK    | 建立和资源之间的联系  | 1.0         |\n| UNLINK  | 断开连接关系      | 1.0         |\n\n\n\n### HTTP的持久连接和管线化\n\n在HTTP的初始版本中，没进行一次HTTP请求就会断开一次TCP连接，之前因为传输的文件容量很小，因此没有什么问题，但随着HTTP的普及， 文档中传送大量图片的情况多了起来。\n\n比如，使用浏览器访问一个包含多张图片的页面时，除了请求HTML页面之外，还需要请求里面的其他资源，因此会造成无畏的TCP链接和断开，增加通信量的开销。\n\n#### 持久连接\n\n为了解决频繁进行TCP连接和断开的问题，HTTP/1.1想到了持久连接的办法，持久连接的特点是，只要一端没有明确提出断开连接，则保持TCP连接状态。这样的方法减少了TCP连接和断开的无畏开销，降低了服务器的负担，从而可以提高页面的加载速度。\n\n#### 管线化\n\n持久连接使得请求管线化传输成为了可能，之前数据的传递是串联进行的，就是说一个请求在接收到返回之后，下一个请求才会开始，而管线化是指，下一个请求不必等到上一个请求返回再开始，请求可以一个一个的接连开始，管线化技术比持久连接技术更能提高请求速度，且请求数越多，时间差距越明显。\n\n### 使用Cookie进行状态管理\n\nHTTP是一个无状态协议，就是说它不会根据之前的请求和返回去处理当前请求，如果一个需要登录认证的web页面将状态记录放到了服务端，那么就需要在每次跳转页面之后重新进行登录。\n\n无状态协议是它的优势，由于不需要记录状态，自然可以减少对CPU及内存的消耗，另一方面，也正是因为HTTP协议十分简单，才会被应用到各个场景中去。\n\n为了既保留无状态协议的优势，又能够解决类似的问题，于是引入了Cookie技术，通过在请求和返回的报文信息中加入Cookie信息，来控制客户端的状态。\n\nCookie会根据服务端返回的报文中的set-Cookie字段，通知客户端保存Cookie，当下次客户端再次向服务端发起请求时，会自动携带这个Cookie信息，服务端接到Cookie后，会通过Cookie判断客户端状态。\n\n\n\n","source":"_posts/《图解HTTP》学习笔记(2) - 简单的HTTP请求.md","raw":"\n## HTTP协议用于客户端和服务端之间的通信\n\n应用HTTP协议时，必定一方为客户端，另一方为服务端。\n<!--more-->\n**HTTP协议支持的方法**\n\n\n| 方法      | 作用          | 支持的HTTP协议版本 |\n| ------- | ----------- | ----------- |\n| GET     | 获取资源        | 1.0、1.1     |\n| POST    | 传输实体主体      | 1.0、1.1     |\n| PUT     | 传输文件        | 1.0、1.1     |\n| HEAD    | 获得报文首部      | 1.0、1.1     |\n| DETELE  | 删除文件        | 1.0、1.1     |\n| OPTIONS | 询问支持的方法     | 1.1         |\n| TRACE   | 追踪路径        | 1.1         |\n| CONNECT | 要求用隧道协议链接代理 | 1.1         |\n| LINK    | 建立和资源之间的联系  | 1.0         |\n| UNLINK  | 断开连接关系      | 1.0         |\n\n\n\n### HTTP的持久连接和管线化\n\n在HTTP的初始版本中，没进行一次HTTP请求就会断开一次TCP连接，之前因为传输的文件容量很小，因此没有什么问题，但随着HTTP的普及， 文档中传送大量图片的情况多了起来。\n\n比如，使用浏览器访问一个包含多张图片的页面时，除了请求HTML页面之外，还需要请求里面的其他资源，因此会造成无畏的TCP链接和断开，增加通信量的开销。\n\n#### 持久连接\n\n为了解决频繁进行TCP连接和断开的问题，HTTP/1.1想到了持久连接的办法，持久连接的特点是，只要一端没有明确提出断开连接，则保持TCP连接状态。这样的方法减少了TCP连接和断开的无畏开销，降低了服务器的负担，从而可以提高页面的加载速度。\n\n#### 管线化\n\n持久连接使得请求管线化传输成为了可能，之前数据的传递是串联进行的，就是说一个请求在接收到返回之后，下一个请求才会开始，而管线化是指，下一个请求不必等到上一个请求返回再开始，请求可以一个一个的接连开始，管线化技术比持久连接技术更能提高请求速度，且请求数越多，时间差距越明显。\n\n### 使用Cookie进行状态管理\n\nHTTP是一个无状态协议，就是说它不会根据之前的请求和返回去处理当前请求，如果一个需要登录认证的web页面将状态记录放到了服务端，那么就需要在每次跳转页面之后重新进行登录。\n\n无状态协议是它的优势，由于不需要记录状态，自然可以减少对CPU及内存的消耗，另一方面，也正是因为HTTP协议十分简单，才会被应用到各个场景中去。\n\n为了既保留无状态协议的优势，又能够解决类似的问题，于是引入了Cookie技术，通过在请求和返回的报文信息中加入Cookie信息，来控制客户端的状态。\n\nCookie会根据服务端返回的报文中的set-Cookie字段，通知客户端保存Cookie，当下次客户端再次向服务端发起请求时，会自动携带这个Cookie信息，服务端接到Cookie后，会通过Cookie判断客户端状态。\n\n\n\n","slug":"《图解HTTP》学习笔记-2-简单的HTTP请求","published":1,"date":"2017-11-23T06:45:40.000Z","updated":"2017-11-23T13:57:57.000Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjacjma8t000071ol505w1cru","content":"<h2 id=\"HTTP协议用于客户端和服务端之间的通信\"><a href=\"#HTTP协议用于客户端和服务端之间的通信\" class=\"headerlink\" title=\"HTTP协议用于客户端和服务端之间的通信\"></a>HTTP协议用于客户端和服务端之间的通信</h2><p>应用HTTP协议时，必定一方为客户端，另一方为服务端。<br><a id=\"more\"></a><br><strong>HTTP协议支持的方法</strong></p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>作用</th>\n<th>支持的HTTP协议版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET</td>\n<td>获取资源</td>\n<td>1.0、1.1</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>传输实体主体</td>\n<td>1.0、1.1</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>传输文件</td>\n<td>1.0、1.1</td>\n</tr>\n<tr>\n<td>HEAD</td>\n<td>获得报文首部</td>\n<td>1.0、1.1</td>\n</tr>\n<tr>\n<td>DETELE</td>\n<td>删除文件</td>\n<td>1.0、1.1</td>\n</tr>\n<tr>\n<td>OPTIONS</td>\n<td>询问支持的方法</td>\n<td>1.1</td>\n</tr>\n<tr>\n<td>TRACE</td>\n<td>追踪路径</td>\n<td>1.1</td>\n</tr>\n<tr>\n<td>CONNECT</td>\n<td>要求用隧道协议链接代理</td>\n<td>1.1</td>\n</tr>\n<tr>\n<td>LINK</td>\n<td>建立和资源之间的联系</td>\n<td>1.0</td>\n</tr>\n<tr>\n<td>UNLINK</td>\n<td>断开连接关系</td>\n<td>1.0</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"HTTP的持久连接和管线化\"><a href=\"#HTTP的持久连接和管线化\" class=\"headerlink\" title=\"HTTP的持久连接和管线化\"></a>HTTP的持久连接和管线化</h3><p>在HTTP的初始版本中，没进行一次HTTP请求就会断开一次TCP连接，之前因为传输的文件容量很小，因此没有什么问题，但随着HTTP的普及， 文档中传送大量图片的情况多了起来。</p>\n<p>比如，使用浏览器访问一个包含多张图片的页面时，除了请求HTML页面之外，还需要请求里面的其他资源，因此会造成无畏的TCP链接和断开，增加通信量的开销。</p>\n<h4 id=\"持久连接\"><a href=\"#持久连接\" class=\"headerlink\" title=\"持久连接\"></a>持久连接</h4><p>为了解决频繁进行TCP连接和断开的问题，HTTP/1.1想到了持久连接的办法，持久连接的特点是，只要一端没有明确提出断开连接，则保持TCP连接状态。这样的方法减少了TCP连接和断开的无畏开销，降低了服务器的负担，从而可以提高页面的加载速度。</p>\n<h4 id=\"管线化\"><a href=\"#管线化\" class=\"headerlink\" title=\"管线化\"></a>管线化</h4><p>持久连接使得请求管线化传输成为了可能，之前数据的传递是串联进行的，就是说一个请求在接收到返回之后，下一个请求才会开始，而管线化是指，下一个请求不必等到上一个请求返回再开始，请求可以一个一个的接连开始，管线化技术比持久连接技术更能提高请求速度，且请求数越多，时间差距越明显。</p>\n<h3 id=\"使用Cookie进行状态管理\"><a href=\"#使用Cookie进行状态管理\" class=\"headerlink\" title=\"使用Cookie进行状态管理\"></a>使用Cookie进行状态管理</h3><p>HTTP是一个无状态协议，就是说它不会根据之前的请求和返回去处理当前请求，如果一个需要登录认证的web页面将状态记录放到了服务端，那么就需要在每次跳转页面之后重新进行登录。</p>\n<p>无状态协议是它的优势，由于不需要记录状态，自然可以减少对CPU及内存的消耗，另一方面，也正是因为HTTP协议十分简单，才会被应用到各个场景中去。</p>\n<p>为了既保留无状态协议的优势，又能够解决类似的问题，于是引入了Cookie技术，通过在请求和返回的报文信息中加入Cookie信息，来控制客户端的状态。</p>\n<p>Cookie会根据服务端返回的报文中的set-Cookie字段，通知客户端保存Cookie，当下次客户端再次向服务端发起请求时，会自动携带这个Cookie信息，服务端接到Cookie后，会通过Cookie判断客户端状态。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"HTTP协议用于客户端和服务端之间的通信\"><a href=\"#HTTP协议用于客户端和服务端之间的通信\" class=\"headerlink\" title=\"HTTP协议用于客户端和服务端之间的通信\"></a>HTTP协议用于客户端和服务端之间的通信</h2><p>应用HTTP协议时，必定一方为客户端，另一方为服务端。<br>","more":"<br><strong>HTTP协议支持的方法</strong></p>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>作用</th>\n<th>支持的HTTP协议版本</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>GET</td>\n<td>获取资源</td>\n<td>1.0、1.1</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>传输实体主体</td>\n<td>1.0、1.1</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>传输文件</td>\n<td>1.0、1.1</td>\n</tr>\n<tr>\n<td>HEAD</td>\n<td>获得报文首部</td>\n<td>1.0、1.1</td>\n</tr>\n<tr>\n<td>DETELE</td>\n<td>删除文件</td>\n<td>1.0、1.1</td>\n</tr>\n<tr>\n<td>OPTIONS</td>\n<td>询问支持的方法</td>\n<td>1.1</td>\n</tr>\n<tr>\n<td>TRACE</td>\n<td>追踪路径</td>\n<td>1.1</td>\n</tr>\n<tr>\n<td>CONNECT</td>\n<td>要求用隧道协议链接代理</td>\n<td>1.1</td>\n</tr>\n<tr>\n<td>LINK</td>\n<td>建立和资源之间的联系</td>\n<td>1.0</td>\n</tr>\n<tr>\n<td>UNLINK</td>\n<td>断开连接关系</td>\n<td>1.0</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"HTTP的持久连接和管线化\"><a href=\"#HTTP的持久连接和管线化\" class=\"headerlink\" title=\"HTTP的持久连接和管线化\"></a>HTTP的持久连接和管线化</h3><p>在HTTP的初始版本中，没进行一次HTTP请求就会断开一次TCP连接，之前因为传输的文件容量很小，因此没有什么问题，但随着HTTP的普及， 文档中传送大量图片的情况多了起来。</p>\n<p>比如，使用浏览器访问一个包含多张图片的页面时，除了请求HTML页面之外，还需要请求里面的其他资源，因此会造成无畏的TCP链接和断开，增加通信量的开销。</p>\n<h4 id=\"持久连接\"><a href=\"#持久连接\" class=\"headerlink\" title=\"持久连接\"></a>持久连接</h4><p>为了解决频繁进行TCP连接和断开的问题，HTTP/1.1想到了持久连接的办法，持久连接的特点是，只要一端没有明确提出断开连接，则保持TCP连接状态。这样的方法减少了TCP连接和断开的无畏开销，降低了服务器的负担，从而可以提高页面的加载速度。</p>\n<h4 id=\"管线化\"><a href=\"#管线化\" class=\"headerlink\" title=\"管线化\"></a>管线化</h4><p>持久连接使得请求管线化传输成为了可能，之前数据的传递是串联进行的，就是说一个请求在接收到返回之后，下一个请求才会开始，而管线化是指，下一个请求不必等到上一个请求返回再开始，请求可以一个一个的接连开始，管线化技术比持久连接技术更能提高请求速度，且请求数越多，时间差距越明显。</p>\n<h3 id=\"使用Cookie进行状态管理\"><a href=\"#使用Cookie进行状态管理\" class=\"headerlink\" title=\"使用Cookie进行状态管理\"></a>使用Cookie进行状态管理</h3><p>HTTP是一个无状态协议，就是说它不会根据之前的请求和返回去处理当前请求，如果一个需要登录认证的web页面将状态记录放到了服务端，那么就需要在每次跳转页面之后重新进行登录。</p>\n<p>无状态协议是它的优势，由于不需要记录状态，自然可以减少对CPU及内存的消耗，另一方面，也正是因为HTTP协议十分简单，才会被应用到各个场景中去。</p>\n<p>为了既保留无状态协议的优势，又能够解决类似的问题，于是引入了Cookie技术，通过在请求和返回的报文信息中加入Cookie信息，来控制客户端的状态。</p>\n<p>Cookie会根据服务端返回的报文中的set-Cookie字段，通知客户端保存Cookie，当下次客户端再次向服务端发起请求时，会自动携带这个Cookie信息，服务端接到Cookie后，会通过Cookie判断客户端状态。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjabyxupu0002myolkxkt9by8","category_id":"cjabyxuq20005myolsdqu1mq2","_id":"cjabyxuq6000amyoli5ulgqis"},{"post_id":"cjabyxuq00004myolezoq1rcs","category_id":"cjabyxuq40007myol6noq9r7g","_id":"cjabyxuq6000cmyolnd5r99b5"}],"PostTag":[{"post_id":"cjabyxupu0002myolkxkt9by8","tag_id":"cjabyxuq40006myold4bth81d","_id":"cjabyxuq50009myol7l1hvhlr"},{"post_id":"cjabyxuq00004myolezoq1rcs","tag_id":"cjabyxuq50008myol3y7iwvv6","_id":"cjabyxuq6000bmyol289ekxb0"}],"Tag":[{"name":"JS插件,视频播放器","_id":"cjabyxuq40006myold4bth81d"},{"name":"HTTP,TCP/IP","_id":"cjabyxuq50008myol3y7iwvv6"}]}}